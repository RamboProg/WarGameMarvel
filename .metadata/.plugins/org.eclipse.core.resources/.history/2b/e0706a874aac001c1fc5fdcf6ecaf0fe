package engine;
import engine.Player;
import java.util.ArrayList;
import model.world.Champion;
import model.abilities.Ability;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
public class Game {

	private Player firstPlayer;
	private Player secondPlayer;
	private boolean firstLeaderAbilityUsed;
	private boolean secondLeaderAbilityUsed;
	private Object[][] board;
	private static ArrayList<Champion> availableChampions;
	private static ArrayList<Ability> availableAbilities;
	private PriorityQueue turnOrder;
	private static int BOARDHEIGHT;
	private static int BOARDWIDTH;

	public Game(Player firstPlayer, Player secondPlayer){
		this.firstPlayer = firstPlayer;
		this.secondPlayer = secondPlayer;
		placeChampions();
	}
	
	public Player getFirstP(){
		return this.firstPlayer;
	}
	
	public Player getScndP(){
		return this.secondPlayer;
	}
	
	public boolean getFrstLdrAbility(){
		return this.firstLeaderAbilityUsed;
	}
	
	public boolean getScndLdrAbility(){	
		return this.secondLeaderAbilityUsed;
	}
	
	public Object[][] getBoard(){
		return this.board;
	}
	
	public static ArrayList<Champion> getChampAvailable(){
		return availableChampions;
	}
	
	public static ArrayList<Ability> getAbilityAvailable(){
		return availableAbilities;
	}
	
	public PriorityQueue getTurnOrder(){
		return this.turnOrder;
	}
	
	public static int getBoardHeight(){
		return BOARDHEIGHT;
	}
	
	public static int getBoardWidth(){
		return BOARDWIDTH;
	}
	
	private void placeChampions(){
		//Champions put on the bottom half
		board[0][1] = availableChampions.get(0); 
		board[0][2] = availableChampions.get(1);
		board[0][3] = availableChampions.get(2);
		
		//Champions put on the top half
		board[4][1] = availableChampions.get(0);
		board[4][2] = availableChampions.get(1);
		board[4][3] = availableChampions.get(2);
	}
	
	private void placeCovers(){
		//for (Object board : ) {
			
		}

}

		
	

