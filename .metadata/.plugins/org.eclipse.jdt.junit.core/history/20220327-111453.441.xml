<?xml version="1.0" encoding="UTF-8"?><testrun name="M1PublicTests" project="Marvel Ultimate War" tests="406" started="406" failures="20" errors="53" ignored="0">
  <testsuite name="tests.M1PublicTests" time="0.121">
    <testcase name="testInstanceVariableDurationIsNotPresentInClassPowerUp" classname="tests.M1PublicTests" time="0.002"/>
    <testcase name="testChampionsSpeed" classname="tests.M1PublicTests" time="0.003">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.generateChampionsArrayListsFromCSV(M1PublicTests.java:2889)&#13;
	at tests.M1PublicTests.testChampionsSpeed(M1PublicTests.java:3221)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0&#13;
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)&#13;
	at java.util.ArrayList.get(ArrayList.java:429)&#13;
	at engine.Game.placeChampions(Game.java:88)&#13;
	at engine.Game.&lt;init&gt;(Game.java:43)&#13;
	... 15 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testInstanceVariableChampionConditionPresent" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testSetterForInstanceVariableTypeExistsInClassDisarm" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableChampionConditionPrivate" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableNameIsNotPresentInClassDisarm" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableChampionConditionSetterLogic" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testSetterForInstanceVariableTypeExistsInClassEffect" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableHeroAttackDamageSetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableVillainCurrentHP" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testEffectIsSuperClassOfPowerUp" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableVillainAttackRangeGetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableChampionConditionGetterLogic" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableChampionConditionGetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableHeroCurrentHP" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testAbilitiesSameNameDynamic" classname="tests.M1PublicTests" time="0.002">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.generateAbilitiesArrayLists(M1PublicTests.java:2613)&#13;
	at tests.M1PublicTests.testAbilitiesSameNameDynamic(M1PublicTests.java:3689)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0&#13;
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)&#13;
	at java.util.ArrayList.get(ArrayList.java:429)&#13;
	at engine.Game.placeChampions(Game.java:88)&#13;
	at engine.Game.&lt;init&gt;(Game.java:43)&#13;
	... 15 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testGetterForInstanceVariableTypeExistsInClassShock" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableDurationIsNotPresentInClassDisarm" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableChampionAttackDamageSetter" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableChampionMaxActionPointsPerTurnType" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableCurrentCooldownIsNotPresentInClassHealingAbility" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableHeroAppliedEffectsSetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableNameIsPrivateInClassEffect" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableChampionMaxHPGetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableVillainAppliedEffects" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testChampionsSpeedDynamic" classname="tests.M1PublicTests" time="0.0">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.generateChampionsArrayList(M1PublicTests.java:2782)&#13;
	at tests.M1PublicTests.testChampionsSpeedDynamic(M1PublicTests.java:3314)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0&#13;
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)&#13;
	at java.util.ArrayList.get(ArrayList.java:429)&#13;
	at engine.Game.placeChampions(Game.java:88)&#13;
	at engine.Game.&lt;init&gt;(Game.java:43)&#13;
	... 15 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testClassIsEnumAreaOfEffect" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testGetterForInstanceVariableNameExistsInClassEmbrace" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariablePlayerTeamSetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testEmptyConstructorUnallowedMovementException" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableHeroNameGetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableTypeIsPresentInClassEffect" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testGameSecondLeaderAbilityUsedSetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testGetterForInstanceVariableDurationExistsInClassDisarm" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableCastRangeIsPresentInClassAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableTurnOrderInGame" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableVillainCurrentHPGetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableVillainMaxHPGetter" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testGetterForInstanceVariableDurationExistsInClassEffect" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableTypeIsNotPresentInClassSilence" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableChampionNameType" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testGetterForInstanceVariableManaCostExistsInClassDamagingAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testAbilitiesAreaOfEffect" classname="tests.M1PublicTests" time="0.001">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.generateAbilitiesArrayListsFromCSV(M1PublicTests.java:2663)&#13;
	at tests.M1PublicTests.testAbilitiesAreaOfEffect(M1PublicTests.java:3533)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0&#13;
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)&#13;
	at java.util.ArrayList.get(ArrayList.java:429)&#13;
	at engine.Game.placeChampions(Game.java:88)&#13;
	at engine.Game.&lt;init&gt;(Game.java:43)&#13;
	... 15 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testInstanceVariableVillainAppliedEffectsGetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testGetterForInstanceVariableCastRangeExistsInClassAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableChampionCurrentHPSetterLogicMax" classname="tests.M1PublicTests" time="0.001">
      <failure>java.lang.AssertionError: The method "setCurrentHP" in class Champion should set the correct value of variable "currentHP". expected:&lt;10&gt; but was:&lt;43&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at tests.M1PublicTests.testSetterLogic(M1PublicTests.java:4820)&#13;
	at tests.M1PublicTests.testInstanceVariableChampionCurrentHPSetterLogicMax(M1PublicTests.java:1354)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testInstanceVariableVillainAttackRangeSetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableNameIsNotPresentInClassShield" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableChampionConditionSetter" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableGameTurnOrderGetterLogic" classname="tests.M1PublicTests" time="0.0">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.testInstanceVariableGameTurnOrderGetterLogic(M1PublicTests.java:2410)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0&#13;
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)&#13;
	at java.util.ArrayList.get(ArrayList.java:429)&#13;
	at engine.Game.placeChampions(Game.java:88)&#13;
	at engine.Game.&lt;init&gt;(Game.java:43)&#13;
	... 14 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testSetterForInstanceVariableRequiredActionPointsExistsInClassDamagingAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableBaseCooldownIsPrivateInClassAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testChampionsSameMana" classname="tests.M1PublicTests" time="0.001">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.generateChampionsArrayListsFromCSV(M1PublicTests.java:2889)&#13;
	at tests.M1PublicTests.testChampionsSameMana(M1PublicTests.java:3036)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0&#13;
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)&#13;
	at java.util.ArrayList.get(ArrayList.java:429)&#13;
	at engine.Game.placeChampions(Game.java:88)&#13;
	at engine.Game.&lt;init&gt;(Game.java:43)&#13;
	... 15 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testSetterForInstanceVariableNameExistsInClassDamagingAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableVillainAttackDamage" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableTypeIsNotPresentInClassDodge" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testConstructor0HealingAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testConstructor0Ability" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableTypeIsNotPresentInClassSpeedUp" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableTypeIsNotPresentInClassShock" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableChampionMaxHPSetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testChampionsAttackDamage" classname="tests.M1PublicTests" time="0.0">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.generateChampionsArrayListsFromCSV(M1PublicTests.java:2889)&#13;
	at tests.M1PublicTests.testChampionsAttackDamage(M1PublicTests.java:3098)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0&#13;
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)&#13;
	at java.util.ArrayList.get(ArrayList.java:429)&#13;
	at engine.Game.placeChampions(Game.java:88)&#13;
	at engine.Game.&lt;init&gt;(Game.java:43)&#13;
	... 15 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testInstanceVariableDurationIsNotPresentInClassShield" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableChampionCurrentHPSetterLogic" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableChampionCurrentActionPointsGetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testPlaceFirstPlayerChampionsMethod" classname="tests.M1PublicTests" time="0.001">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.testPlaceFirstPlayerChampionsMethod(M1PublicTests.java:4119)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.NullPointerException&#13;
	at model.world.Cover.&lt;init&gt;(Cover.java:11)&#13;
	at engine.Game.placeCovers(Game.java:104)&#13;
	at engine.Game.&lt;init&gt;(Game.java:44)&#13;
	... 14 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testInstanceVariableGameBoardGetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableHeroNameSetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testConstructorAntiHeroInitialization" classname="tests.M1PublicTests" time="0.001">
      <failure>java.lang.AssertionError: The constructor of the AntiHero class should initialize the instance variable "maxActionPointsPerTurn" correctly. expected:&lt;9&gt; but was:&lt;0&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at tests.M1PublicTests.testConstructorInitialization(M1PublicTests.java:4938)&#13;
	at tests.M1PublicTests.testConstructorAntiHeroInitialization(M1PublicTests.java:1813)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testChampionsAbilities" classname="tests.M1PublicTests" time="0.0">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.generateChampionsArrayListsFromCSV(M1PublicTests.java:2889)&#13;
	at tests.M1PublicTests.testChampionsAbilities(M1PublicTests.java:3127)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0&#13;
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)&#13;
	at java.util.ArrayList.get(ArrayList.java:429)&#13;
	at engine.Game.placeChampions(Game.java:88)&#13;
	at engine.Game.&lt;init&gt;(Game.java:43)&#13;
	... 15 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testInstanceVariableNameIsNotPresentInClassRoot" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testGetterForInstanceVariableCastAreaExistsInClassDamagingAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableVillainCurrentHPSetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableChampionCurrentHPGetterLogic" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableVillainMaxHPSetter" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testGetterForInstanceVariableNameExistsInClassAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableVillainAppliedEffectsSetter" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableHeroMaxHPGetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testConstructor0Dodge" classname="tests.M1PublicTests" time="0.001">
      <failure>java.lang.AssertionError: Missing constructor with int  parameter in Dodge class.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at org.junit.Assert.assertFalse(Assert.java:64)&#13;
	at tests.M1PublicTests.testConstructorExists(M1PublicTests.java:4894)&#13;
	at tests.M1PublicTests.testConstructor0Dodge(M1PublicTests.java:196)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testConstructor0Shock" classname="tests.M1PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Missing constructor with int  parameter in Shock class.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at org.junit.Assert.assertFalse(Assert.java:64)&#13;
	at tests.M1PublicTests.testConstructorExists(M1PublicTests.java:4894)&#13;
	at tests.M1PublicTests.testConstructor0Shock(M1PublicTests.java:208)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testInstanceVariableHealingAmountIsPrivateInClassHealingAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testSetterForInstanceVariableBaseCooldownExistsInClassHealingAbility" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testChampionsAttackRangeDynamic" classname="tests.M1PublicTests" time="0.0">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.generateChampionsArrayList(M1PublicTests.java:2782)&#13;
	at tests.M1PublicTests.testChampionsAttackRangeDynamic(M1PublicTests.java:3345)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0&#13;
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)&#13;
	at java.util.ArrayList.get(ArrayList.java:429)&#13;
	at engine.Game.placeChampions(Game.java:88)&#13;
	at engine.Game.&lt;init&gt;(Game.java:43)&#13;
	... 15 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testConstructor0Stun" classname="tests.M1PublicTests" time="0.001">
      <failure>java.lang.AssertionError: Missing constructor with int  parameter in Stun class.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at org.junit.Assert.assertFalse(Assert.java:64)&#13;
	at tests.M1PublicTests.testConstructorExists(M1PublicTests.java:4894)&#13;
	at tests.M1PublicTests.testConstructor0Stun(M1PublicTests.java:184)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testInstanceVariableHeroMaxHP" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableHeroSpeed" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testConstructorCover" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableChampionNameGetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testCoverCurrentHPSetterLogicGeneral" classname="tests.M1PublicTests" time="0.0">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.testCoverCurrentHPSetterLogicGeneral(M1PublicTests.java:1204)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.NullPointerException&#13;
	at model.world.Cover.&lt;init&gt;(Cover.java:11)&#13;
	... 14 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testInstanceVariableGameAvailableAbilitiesGetterLogic" classname="tests.M1PublicTests" time="0.001">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.testInstanceVariableGameAvailableAbilitiesGetterLogic(M1PublicTests.java:2427)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0&#13;
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)&#13;
	at java.util.ArrayList.get(ArrayList.java:429)&#13;
	at engine.Game.placeChampions(Game.java:88)&#13;
	at engine.Game.&lt;init&gt;(Game.java:43)&#13;
	... 14 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testGetterForInstanceVariableCurrentCooldownExistsInClassAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testSetterForInstanceVariableCastRangeExistsInClassDamagingAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableTypeIsNotPresentInClassEmbrace" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableTypeIsNotPresentInClassDisarm" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testGetterForInstanceVariableTypeExistsInClassStun" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableGameAvailableAbilitiesGetter" classname="tests.M1PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The "availableAbilities" instance variable in class Game is a READ variable.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M1PublicTests.testGetterMethodExistsInClass(M1PublicTests.java:4710)&#13;
	at tests.M1PublicTests.testInstanceVariableGameAvailableAbilitiesGetter(M1PublicTests.java:2322)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testplaceCoversMethod" classname="tests.M1PublicTests" time="0.001">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.testplaceCoversMethod(M1PublicTests.java:4246)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0&#13;
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)&#13;
	at java.util.ArrayList.get(ArrayList.java:429)&#13;
	at engine.Game.placeChampions(Game.java:88)&#13;
	at engine.Game.&lt;init&gt;(Game.java:43)&#13;
	... 14 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testConstructorAbilityUseException" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableTypeIsNotPresentInClassRoot" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableTypeIsNotPresentInClassStun" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableChampionCurrentHPSetterLogicZero" classname="tests.M1PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The method "setCurrentHP" in class Champion should set the correct value of variable "currentHP". expected:&lt;0&gt; but was:&lt;-1&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at tests.M1PublicTests.testSetterLogic(M1PublicTests.java:4820)&#13;
	at tests.M1PublicTests.testInstanceVariableChampionCurrentHPSetterLogicZero(M1PublicTests.java:1370)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testInstanceVariableBoardHightInGame" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableVillainAttackRange" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testPlaceSecondPlayerChampionsMethod" classname="tests.M1PublicTests" time="0.001">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.testPlaceSecondPlayerChampionsMethod(M1PublicTests.java:4195)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.NullPointerException&#13;
	at model.world.Cover.&lt;init&gt;(Cover.java:11)&#13;
	at engine.Game.placeCovers(Game.java:104)&#13;
	at engine.Game.&lt;init&gt;(Game.java:44)&#13;
	... 14 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testSetterForInstanceVariableDurationExistsInClassDisarm" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariablePlayerName" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testSetterForInstanceVariableDurationExistsInClassEffect" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testFirstPlayerChampionsLocationAfterPlaceChampions" classname="tests.M1PublicTests" time="0.001">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.testFirstPlayerChampionsLocationAfterPlaceChampions(M1PublicTests.java:4345)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.NullPointerException&#13;
	at model.world.Cover.&lt;init&gt;(Cover.java:11)&#13;
	at engine.Game.placeCovers(Game.java:104)&#13;
	at engine.Game.&lt;init&gt;(Game.java:44)&#13;
	... 14 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testInstanceVariableChampionSpeedType" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableHeroCurrentActionPoints" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableHeroLocationGetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableVillainAbilities" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableCurrentCooldownIsNotPresentInClassDamagingAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableHeroMaxHPSetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableHeroAbilities" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testAbilitiesSameBaseCoolDown" classname="tests.M1PublicTests" time="0.001">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.generateAbilitiesArrayListsFromCSV(M1PublicTests.java:2663)&#13;
	at tests.M1PublicTests.testAbilitiesSameBaseCoolDown(M1PublicTests.java:3500)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0&#13;
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)&#13;
	at java.util.ArrayList.get(ArrayList.java:429)&#13;
	at engine.Game.placeChampions(Game.java:88)&#13;
	at engine.Game.&lt;init&gt;(Game.java:43)&#13;
	... 15 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testGetterForInstanceVariableCastRangeExistsInClassDamagingAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testSetterLogicForInstanceVariableDurationeffect00int70InClassEffect" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testClassIsSubclassAbilityUseException" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableChampionNameSetter" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableCurrentCooldownIsNotPresentInClassCrowdControlAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableChampionAbilitiesGetterLogic" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testAbilitiesSameClassDynamic" classname="tests.M1PublicTests" time="0.0">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.generateAbilitiesArrayLists(M1PublicTests.java:2613)&#13;
	at tests.M1PublicTests.testAbilitiesSameClassDynamic(M1PublicTests.java:3664)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0&#13;
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)&#13;
	at java.util.ArrayList.get(ArrayList.java:429)&#13;
	at engine.Game.placeChampions(Game.java:88)&#13;
	at engine.Game.&lt;init&gt;(Game.java:43)&#13;
	... 15 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testInstanceVariableHeroAbilitiesGetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testCoverCurrentHPGetter" classname="tests.M1PublicTests" time="0.001">
      <failure>java.lang.AssertionError: The "currentHP" instance variable in class Cover is a READ variable.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M1PublicTests.testGetterMethodExistsInClass(M1PublicTests.java:4710)&#13;
	at tests.M1PublicTests.testCoverCurrentHPGetter(M1PublicTests.java:1179)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testChampionsSameMaxHPDynamic" classname="tests.M1PublicTests" time="0.0">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.GeneratedConstructorAccessor5.newInstance(Unknown Source)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.generateChampionsArrayList(M1PublicTests.java:2782)&#13;
	at tests.M1PublicTests.testChampionsSameMaxHPDynamic(M1PublicTests.java:3190)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0&#13;
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)&#13;
	at java.util.ArrayList.get(ArrayList.java:429)&#13;
	at engine.Game.placeChampions(Game.java:88)&#13;
	at engine.Game.&lt;init&gt;(Game.java:43)&#13;
	... 14 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testInstanceVariableGameFirstPlayerGetterLogic" classname="tests.M1PublicTests" time="0.0">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.GeneratedConstructorAccessor5.newInstance(Unknown Source)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.testInstanceVariableGameFirstPlayerGetterLogic(M1PublicTests.java:2350)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0&#13;
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)&#13;
	at java.util.ArrayList.get(ArrayList.java:429)&#13;
	at engine.Game.placeChampions(Game.java:88)&#13;
	at engine.Game.&lt;init&gt;(Game.java:43)&#13;
	... 13 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testInstanceVariableVillainManaGetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableGameBoardGetterLogic" classname="tests.M1PublicTests" time="0.0">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.GeneratedConstructorAccessor5.newInstance(Unknown Source)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.testInstanceVariableGameBoardGetterLogic(M1PublicTests.java:2395)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0&#13;
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)&#13;
	at java.util.ArrayList.get(ArrayList.java:429)&#13;
	at engine.Game.placeChampions(Game.java:88)&#13;
	at engine.Game.&lt;init&gt;(Game.java:43)&#13;
	... 13 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testInstanceVariableHeroAttackRange" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableChampionAttackRangeGetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableTypeIsNotPresentInClassShield" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableChampionNamePresent" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableChampionNamePrivate" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableChampionAttackRangeGetterLogic" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testSetterForInstanceVariableCastAreaExistsInClassHealingAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableHeroLocationSetter" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableVillainMana" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableVillainName" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testGetterForInstanceVariableNameExistsInClassCrowdControlAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInvalidConstructor0Silence" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableVillainConditionGetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testGetterForInstanceVariableNameExistsInClassPowerUp" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariablePlayerLeaderGetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testChampionsAbilitiesDynamic" classname="tests.M1PublicTests" time="0.001">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.GeneratedConstructorAccessor5.newInstance(Unknown Source)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.generateChampionsArrayList(M1PublicTests.java:2782)&#13;
	at tests.M1PublicTests.testChampionsAbilitiesDynamic(M1PublicTests.java:3374)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0&#13;
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)&#13;
	at java.util.ArrayList.get(ArrayList.java:429)&#13;
	at engine.Game.placeChampions(Game.java:88)&#13;
	at engine.Game.&lt;init&gt;(Game.java:43)&#13;
	... 14 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testInstanceVariableCastRangeIsPrivateInClassAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableChampionMaxActionPointsPerTurnPresent" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableChampionMaxActionPointsPerTurnPrivate" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableChampionNameGetterLogic" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testSetterForInstanceVariableCastRangeExistsInClassHealingAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableChampionAttackRangeType" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableHeroAbilitiesSetter" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testGetterForInstanceVariableTypeExistsInClassSilence" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testCoverCurrentHPSetter" classname="tests.M1PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The "currentHP" instance variable in class Cover is a WRITE variable.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M1PublicTests.testSetterMethodExistsInClass(M1PublicTests.java:4771)&#13;
	at tests.M1PublicTests.testCoverCurrentHPSetter(M1PublicTests.java:1195)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testInstanceVariableVillainMaxActionPointsPerTurnGetter" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testConstructorInitialization2500CrowdControlAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableManaCostIsNotPresentInClassDamagingAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableManaCostIsPresentInClassAbility" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testAbilityIsSuperClassOfHealingAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableDamageAmountIsPrivateInClassDamagingAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testAbilitiesAreaOfEffectDynamic" classname="tests.M1PublicTests" time="0.001">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.GeneratedConstructorAccessor5.newInstance(Unknown Source)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.generateAbilitiesArrayLists(M1PublicTests.java:2613)&#13;
	at tests.M1PublicTests.testAbilitiesAreaOfEffectDynamic(M1PublicTests.java:3785)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0&#13;
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)&#13;
	at java.util.ArrayList.get(ArrayList.java:429)&#13;
	at engine.Game.placeChampions(Game.java:88)&#13;
	at engine.Game.&lt;init&gt;(Game.java:43)&#13;
	... 14 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testInstanceVariableHeroMana" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableHeroName" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInvalidConstructor0SpeedUp" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testAbilitiesRequiredActionPointsDynamic" classname="tests.M1PublicTests" time="0.001">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.GeneratedConstructorAccessor5.newInstance(Unknown Source)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.generateAbilitiesArrayLists(M1PublicTests.java:2613)&#13;
	at tests.M1PublicTests.testAbilitiesRequiredActionPointsDynamic(M1PublicTests.java:3818)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0&#13;
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)&#13;
	at java.util.ArrayList.get(ArrayList.java:429)&#13;
	at engine.Game.placeChampions(Game.java:88)&#13;
	at engine.Game.&lt;init&gt;(Game.java:43)&#13;
	... 14 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testGameBoardHeightStatic" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableVillainManaSetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testGetterForInstanceVariableTypeExistsInClassShield" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testSetterForInstanceVariableTypeExistsInClassSpeedUp" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableChampionAttackRangeSetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testConstructor0CrowdControlAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testClassIsSubclassVillain" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableVillainCurrentActionPoints" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testAbilitiesSameCastRange" classname="tests.M1PublicTests" time="0.0">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.GeneratedConstructorAccessor5.newInstance(Unknown Source)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.generateAbilitiesArrayListsFromCSV(M1PublicTests.java:2663)&#13;
	at tests.M1PublicTests.testAbilitiesSameCastRange(M1PublicTests.java:3468)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0&#13;
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)&#13;
	at java.util.ArrayList.get(ArrayList.java:429)&#13;
	at engine.Game.placeChampions(Game.java:88)&#13;
	at engine.Game.&lt;init&gt;(Game.java:43)&#13;
	... 14 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testInstanceVariablePlayerLeader" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableVillainMaxActionPointsPerTurn" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableChampionAbilitiesGetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableAvailableChampionsInGame" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testGetterForInstanceVariableTypeExistsInClassSpeedUp" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testGameAvailableAbilitiesSetter" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testGetterForInstanceVariableRequiredActionPointsExistsInClassHealingAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testSetterForInstanceVariableBaseCooldownExistsInClassAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testClassIsSubclassHero" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableVillainConditionSetter" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testGetterForInstanceVariableCastAreaExistsInClassCrowdControlAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testAbilitiesSameEffect" classname="tests.M1PublicTests" time="0.0">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.GeneratedConstructorAccessor5.newInstance(Unknown Source)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.generateAbilitiesArrayListsFromCSV(M1PublicTests.java:2663)&#13;
	at tests.M1PublicTests.testAbilitiesSameEffect(M1PublicTests.java:3600)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0&#13;
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)&#13;
	at java.util.ArrayList.get(ArrayList.java:429)&#13;
	at engine.Game.placeChampions(Game.java:88)&#13;
	at engine.Game.&lt;init&gt;(Game.java:43)&#13;
	... 14 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testInstanceVariablePlayerLeaderSetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testConstructorCoverInitialization" classname="tests.M1PublicTests" time="0.001">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.testConstructorCoverInitialization(M1PublicTests.java:1156)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.NullPointerException&#13;
	at model.world.Cover.&lt;init&gt;(Cover.java:11)&#13;
	... 14 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testInstanceVariablePlayerLeaderSetterLogic" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableVillainMaxActionPointsPerTurnSetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariablePlayerLeaderGetterLogic" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableManaCostIsNotPresentInClassCrowdControlAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testCoverInstanceVariableLocationType" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableHeroMaxActionPointsPerTurn" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableBaseCooldownIsNotPresentInClassHealingAbility" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testEnumConditionValues" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableChampionAbilitiesSetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testSetterForInstanceVariableNameExistsInClassStun" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testSetterForInstanceVariableNameExistsInClassShock" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableChampionSpeedPresent" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableChampionSpeedPrivate" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testSetterForInstanceVariableCurrentCooldownExistsInClassAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableHeroCurrentActionPointsGetter" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testSetterForInstanceVariableManaCostExistsInClassCrowdControlAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableNameIsNotPresentInClassEmbrace" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableTypeIsNotPresentInClassPowerUp" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testSetterForInstanceVariableNameExistsInClassEffect" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testSetterForInstanceVariableManaCostExistsInClassAbility" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableDurationIsPresentInClassEffect" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testClassIsSubclassUnallowedMovementException" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testConstructorVillainInitialization" classname="tests.M1PublicTests" time="0.001">
      <failure>java.lang.AssertionError: The constructor of the Villain class should initialize the instance variable "currentHP" correctly. It should be equals to the max initially. expected:&lt;5&gt; but was:&lt;0&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at tests.M1PublicTests.testConstructorInitialization(M1PublicTests.java:4932)&#13;
	at tests.M1PublicTests.testConstructorVillainInitialization(M1PublicTests.java:2239)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testConstructorGameActionException" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testConstructorInitialization1700Shock" classname="tests.M1PublicTests" time="0.0">
      <error>java.lang.NoSuchMethodException: model.effects.Shock.&lt;init&gt;(int)&#13;
	at java.lang.Class.getConstructor0(Class.java:3074)&#13;
	at java.lang.Class.getConstructor(Class.java:1817)&#13;
	at tests.M1PublicTests.testConstructorInitialization1700Shock(M1PublicTests.java:386)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testSetterForInstanceVariableDurationExistsInClassEmbrace" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableHeroMaxActionPointsPerTurnGetter" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableVillainMaxHP" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableVillainSpeed" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testChampionsSameClassDynamic" classname="tests.M1PublicTests" time="0.001">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.GeneratedConstructorAccessor5.newInstance(Unknown Source)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.generateChampionsArrayList(M1PublicTests.java:2782)&#13;
	at tests.M1PublicTests.testChampionsSameClassDynamic(M1PublicTests.java:3165)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0&#13;
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)&#13;
	at java.util.ArrayList.get(ArrayList.java:429)&#13;
	at engine.Game.placeChampions(Game.java:88)&#13;
	at engine.Game.&lt;init&gt;(Game.java:43)&#13;
	... 14 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testInstanceVariableChampionMaxHPGetterLogic" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testSetterForInstanceVariableNameExistsInClassHealingAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testAbilitiesSameCostDynamic" classname="tests.M1PublicTests" time="0.001">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.GeneratedConstructorAccessor5.newInstance(Unknown Source)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.generateAbilitiesArrayLists(M1PublicTests.java:2613)&#13;
	at tests.M1PublicTests.testAbilitiesSameCostDynamic(M1PublicTests.java:3720)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0&#13;
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)&#13;
	at java.util.ArrayList.get(ArrayList.java:429)&#13;
	at engine.Game.placeChampions(Game.java:88)&#13;
	at engine.Game.&lt;init&gt;(Game.java:43)&#13;
	... 14 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testConstructorInitialization2400DamagingAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testConstructorGameConstructorInitialization" classname="tests.M1PublicTests" time="0.0">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.GeneratedConstructorAccessor5.newInstance(Unknown Source)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.testConstructorGameConstructorInitialization(M1PublicTests.java:2499)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.NullPointerException&#13;
	at model.world.Cover.&lt;init&gt;(Cover.java:11)&#13;
	at engine.Game.placeCovers(Game.java:104)&#13;
	at engine.Game.&lt;init&gt;(Game.java:44)&#13;
	... 13 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testGetterForInstanceVariableNameExistsInClassSlipperiness" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableDurationIsNotPresentInClassSilence" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testConstructorLeaderAbilityAlreadyUsedException" classname="tests.M1PublicTests" time="0.0">
      <error>java.lang.ClassNotFoundException: exceptions.LeaderAbilityAlreadyUsedException&#13;
	at java.net.URLClassLoader$1.run(URLClassLoader.java:372)&#13;
	at java.net.URLClassLoader$1.run(URLClassLoader.java:361)&#13;
	at java.security.AccessController.doPrivileged(Native Method)&#13;
	at java.net.URLClassLoader.findClass(URLClassLoader.java:360)&#13;
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)&#13;
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)&#13;
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)&#13;
	at java.lang.Class.forName0(Native Method)&#13;
	at java.lang.Class.forName(Class.java:260)&#13;
	at tests.M1PublicTests.testConstructorLeaderAbilityAlreadyUsedException(M1PublicTests.java:4520)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testInstanceVariableGameFirstLeaderAbilityUsedGetter" classname="tests.M1PublicTests" time="0.001">
      <failure>java.lang.AssertionError: The "firstLeaderAbilityUsed" instance variable in class Game is a READ variable.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M1PublicTests.testGetterMethodExistsInClass(M1PublicTests.java:4710)&#13;
	at tests.M1PublicTests.testInstanceVariableGameFirstLeaderAbilityUsedGetter(M1PublicTests.java:2312)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testClassIsSubclassGameActionException" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableHeroCurrentActionPointsSetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableVillainLocationGetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testSetterForInstanceVariableRequiredActionPointsExistsInClassCrowdControlAbility" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testEmptyConstructorAbilityUseException" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableGameBOARDWIDTHGetter" classname="tests.M1PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The "boardwidth" instance variable in class Game is a READ variable.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M1PublicTests.testGetterMethodExistsInClass(M1PublicTests.java:4710)&#13;
	at tests.M1PublicTests.testInstanceVariableGameBOARDWIDTHGetter(M1PublicTests.java:2337)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testInstanceVariableBoardWidthInGame" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testSetterForInstanceVariableNameExistsInClassShield" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInvalidConstructor0DamagingAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableDurationIsNotPresentInClassDodge" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableDurationIsNotPresentInClassShock" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testSetterForInstanceVariableBaseCooldownExistsInClassDamagingAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInvalidConstructor0Disarm" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableCurrentCooldownIsPresentInClassAbility" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableDurationIsNotPresentInClassSpeedUp" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testEffectIsSuperClassOfDisarm" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableVillainLocation" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testGetterForInstanceVariableCastRangeExistsInClassHealingAbility" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableHeroMaxActionPointsPerTurnSetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testGameBOARDHEIGHTSetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testAbilitiesRequiredActionPoints" classname="tests.M1PublicTests" time="0.0">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.GeneratedConstructorAccessor5.newInstance(Unknown Source)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.generateAbilitiesArrayListsFromCSV(M1PublicTests.java:2663)&#13;
	at tests.M1PublicTests.testAbilitiesRequiredActionPoints(M1PublicTests.java:3567)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0&#13;
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)&#13;
	at java.util.ArrayList.get(ArrayList.java:429)&#13;
	at engine.Game.placeChampions(Game.java:88)&#13;
	at engine.Game.&lt;init&gt;(Game.java:43)&#13;
	... 14 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testConstructorInitialization1300Stun" classname="tests.M1PublicTests" time="0.001">
      <error>java.lang.NoSuchMethodException: model.effects.Stun.&lt;init&gt;(int)&#13;
	at java.lang.Class.getConstructor0(Class.java:3074)&#13;
	at java.lang.Class.getConstructor(Class.java:1817)&#13;
	at tests.M1PublicTests.testConstructorInitialization1300Stun(M1PublicTests.java:316)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testInstanceVariableHeroAttackRangeGetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testCoverCurrentHPGetterLogic" classname="tests.M1PublicTests" time="0.0">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.testCoverCurrentHPGetterLogic(M1PublicTests.java:1188)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.NullPointerException&#13;
	at model.world.Cover.&lt;init&gt;(Cover.java:11)&#13;
	... 14 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testInstanceVariableHeroCurrentHPGetter" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testGameBOARDWIDTHSetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableChampionAppliedEffectsPresent" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testEnumDirection" classname="tests.M1PublicTests" time="0.0">
      <error>java.lang.ClassNotFoundException: model.world.Direction&#13;
	at java.net.URLClassLoader$1.run(URLClassLoader.java:372)&#13;
	at java.net.URLClassLoader$1.run(URLClassLoader.java:361)&#13;
	at java.security.AccessController.doPrivileged(Native Method)&#13;
	at java.net.URLClassLoader.findClass(URLClassLoader.java:360)&#13;
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)&#13;
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)&#13;
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)&#13;
	at java.lang.Class.forName0(Native Method)&#13;
	at java.lang.Class.forName(Class.java:260)&#13;
	at tests.M1PublicTests.testEnumDirection(M1PublicTests.java:75)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testInstanceVariableChampionMaxActionPointsPerTurnGetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testAbilitiesSameEffectDynamic" classname="tests.M1PublicTests" time="0.001">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.GeneratedConstructorAccessor5.newInstance(Unknown Source)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.generateAbilitiesArrayLists(M1PublicTests.java:2613)&#13;
	at tests.M1PublicTests.testAbilitiesSameEffectDynamic(M1PublicTests.java:3897)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0&#13;
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)&#13;
	at java.util.ArrayList.get(ArrayList.java:429)&#13;
	at engine.Game.placeChampions(Game.java:88)&#13;
	at engine.Game.&lt;init&gt;(Game.java:43)&#13;
	... 14 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testInstanceVariableManaCostIsPrivateInClassAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testGetterForInstanceVariableBaseCooldownExistsInClassAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testGetterLogicForInstanceVariableNameability00string00InClassAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testGameTurnOrderSetter" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testAbilityIsSuperClassOfDamagingAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableVillainCondition" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableVillainLocationSetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableNameIsPresentInClassAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testEnumCondition" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testConstructor0Effect" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testConstructorInitialization1600Silence" classname="tests.M1PublicTests" time="0.001">
      <error>java.lang.NoSuchMethodException: model.effects.Silence.&lt;init&gt;(int)&#13;
	at java.lang.Class.getConstructor0(Class.java:3074)&#13;
	at java.lang.Class.getConstructor(Class.java:1817)&#13;
	at tests.M1PublicTests.testConstructorInitialization1600Silence(M1PublicTests.java:372)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testInstanceVariableChampionConditionType" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableHeroCondition" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testConstructorPlayerConstructorInitialization" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableFirstLeaderAbilityUsedInGame" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableHealingAmountIsPresentInClassHealingAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableVillainNameGetter" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testCoverLocationGetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableChampionManaType" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableNameIsPresentInClassEffect" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testGameAvailableChampionsSetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testAbilitiesSameHealingOrDamageAmountDynamic" classname="tests.M1PublicTests" time="0.001">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.GeneratedConstructorAccessor5.newInstance(Unknown Source)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.generateAbilitiesArrayLists(M1PublicTests.java:2613)&#13;
	at tests.M1PublicTests.testAbilitiesSameHealingOrDamageAmountDynamic(M1PublicTests.java:3851)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0&#13;
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)&#13;
	at java.util.ArrayList.get(ArrayList.java:429)&#13;
	at engine.Game.placeChampions(Game.java:88)&#13;
	at engine.Game.&lt;init&gt;(Game.java:43)&#13;
	... 14 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testInstanceVariableChampionManaPresent" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableChampionManaPrivate" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableChampionAttackDamageType" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableHeroManaGetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableDurationIsNotPresentInClassEmbrace" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInvalidConstructor0Shield" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableRequiredActionPointsIsPresentInClassAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableHeroAttackRangeSetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableHeroAppliedEffects" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testConstructorInitialization1500Dodge" classname="tests.M1PublicTests" time="0.0">
      <error>java.lang.NoSuchMethodException: model.effects.Dodge.&lt;init&gt;(int)&#13;
	at java.lang.Class.getConstructor0(Class.java:3074)&#13;
	at java.lang.Class.getConstructor(Class.java:1817)&#13;
	at tests.M1PublicTests.testConstructorInitialization1500Dodge(M1PublicTests.java:358)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testInstanceVariableHeroCurrentHPSetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testEffectIsSuperClassOfShield" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableGameSecondPlayerGetterLogic" classname="tests.M1PublicTests" time="0.0">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.GeneratedConstructorAccessor5.newInstance(Unknown Source)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.testInstanceVariableGameSecondPlayerGetterLogic(M1PublicTests.java:2365)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0&#13;
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)&#13;
	at java.util.ArrayList.get(ArrayList.java:429)&#13;
	at engine.Game.placeChampions(Game.java:88)&#13;
	at engine.Game.&lt;init&gt;(Game.java:43)&#13;
	... 13 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testInstanceVariableChampionCurrentActionPointsGetterLogic" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testEffectIsSuperClassOfEmbrace" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableGameFirstPlayerGetter" classname="tests.M1PublicTests" time="0.001">
      <failure>java.lang.AssertionError: The "firstPlayer" instance variable in class Game is a READ variable.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M1PublicTests.testGetterMethodExistsInClass(M1PublicTests.java:4710)&#13;
	at tests.M1PublicTests.testInstanceVariableGameFirstPlayerGetter(M1PublicTests.java:2302)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testInstanceVariableChampionMaxActionPointsPerTurnSetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableVillainAbilitiesGetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testSetterForInstanceVariableCurrentCooldownExistsInClassCrowdControlAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testChampionsAttackRange" classname="tests.M1PublicTests" time="0.0">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.GeneratedConstructorAccessor5.newInstance(Unknown Source)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.generateChampionsArrayListsFromCSV(M1PublicTests.java:2889)&#13;
	at tests.M1PublicTests.testChampionsAttackRange(M1PublicTests.java:3067)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0&#13;
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)&#13;
	at java.util.ArrayList.get(ArrayList.java:429)&#13;
	at engine.Game.placeChampions(Game.java:88)&#13;
	at engine.Game.&lt;init&gt;(Game.java:43)&#13;
	... 14 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testCoverInstanceVariableLocationPresent" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testCoverInstanceVariableLocationPrivate" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableChampionSpeedGetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testGetterLogicForInstanceVariableTypeeffect00effectType01InClassEffect" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableChampionCurrentHPGetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testGameBoardSetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableVillainNameSetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testConstructor0Shield" classname="tests.M1PublicTests" time="0.001">
      <failure>java.lang.AssertionError: Missing constructor with int  parameter in Shield class.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at org.junit.Assert.assertFalse(Assert.java:64)&#13;
	at tests.M1PublicTests.testConstructorExists(M1PublicTests.java:4894)&#13;
	at tests.M1PublicTests.testConstructor0Shield(M1PublicTests.java:214)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testInvalidConstructor0PowerUp" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testConstructorInitialization1200Effect" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testCoverLocationSetter" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableVillainAttackDamageGetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableGameTurnOrderGetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableGameBOARDHEIGHTGetter" classname="tests.M1PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The "boardheight" instance variable in class Game is a READ variable.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M1PublicTests.testGetterMethodExistsInClass(M1PublicTests.java:4710)&#13;
	at tests.M1PublicTests.testInstanceVariableGameBOARDHEIGHTGetter(M1PublicTests.java:2332)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testInstanceVariableVillainCurrentActionPointsGetter" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableHeroManaSetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testGetterForInstanceVariableManaCostExistsInClassHealingAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableBaseCooldownIsNotPresentInClassCrowdControlAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableVillainSpeedGetter" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testGetterForInstanceVariableRequiredActionPointsExistsInClassDamagingAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testGetterForInstanceVariableTypeExistsInClassSlipperiness" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableDurationIsNotPresentInClassRoot" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableDurationIsNotPresentInClassStun" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testGetterForInstanceVariableTypeExistsInClassPowerUp" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testSetterForInstanceVariableNameExistsInClassSlipperiness" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableChampionCurrentHPType" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testGetterForInstanceVariableNameExistsInClassDisarm" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableNameIsNotPresentInClassPowerUp" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testPriorityQueueClassExists" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testGetterForInstanceVariableNameExistsInClassEffect" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableChampionCurrentHPPresent" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableChampionCurrentHPPrivate" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testConstructorInitialization1400SpeedUp" classname="tests.M1PublicTests" time="0.0">
      <error>java.lang.NoSuchMethodException: model.effects.SpeedUp.&lt;init&gt;(int)&#13;
	at java.lang.Class.getConstructor0(Class.java:3074)&#13;
	at java.lang.Class.getConstructor(Class.java:1817)&#13;
	at tests.M1PublicTests.testConstructorInitialization1400SpeedUp(M1PublicTests.java:330)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testInstanceVariableVillainAbilitiesSetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testCoverLocationGetterLogic" classname="tests.M1PublicTests" time="0.001">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)&#13;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.testCoverLocationGetterLogic(M1PublicTests.java:1220)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.NullPointerException&#13;
	at model.world.Cover.&lt;init&gt;(Cover.java:11)&#13;
	... 14 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testEnumDirectionValues" classname="tests.M1PublicTests" time="0.0">
      <error>java.lang.ClassNotFoundException: model.world.Direction&#13;
	at java.net.URLClassLoader$1.run(URLClassLoader.java:372)&#13;
	at java.net.URLClassLoader$1.run(URLClassLoader.java:361)&#13;
	at java.security.AccessController.doPrivileged(Native Method)&#13;
	at java.net.URLClassLoader.findClass(URLClassLoader.java:360)&#13;
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)&#13;
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)&#13;
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)&#13;
	at java.lang.Class.forName0(Native Method)&#13;
	at java.lang.Class.forName(Class.java:260)&#13;
	at tests.M1PublicTests.testEnumDirectionValues(M1PublicTests.java:92)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testEffectIsSuperClassOfShock" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableChampionManaGetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableGameSecondLeaderAbilityUsedGetterLogic" classname="tests.M1PublicTests" time="0.0">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.GeneratedConstructorAccessor5.newInstance(Unknown Source)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.testInstanceVariableGameSecondLeaderAbilityUsedGetterLogic(M1PublicTests.java:2380)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0&#13;
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)&#13;
	at java.util.ArrayList.get(ArrayList.java:429)&#13;
	at engine.Game.placeChampions(Game.java:88)&#13;
	at engine.Game.&lt;init&gt;(Game.java:43)&#13;
	... 13 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testGetterForInstanceVariableDurationExistsInClassStun" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableChampionManaGetterLogic" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testSetterForInstanceVariableDamageAmountExistsInClassDamagingAbility" classname="tests.M1PublicTests" time="0.001">
      <failure>java.lang.AssertionError: The "damageAmount" instance variable in class DamagingAbility is a WRITE variable.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M1PublicTests.testSetterMethodExistsInClass(M1PublicTests.java:4771)&#13;
	at tests.M1PublicTests.testSetterForInstanceVariableDamageAmountExistsInClassDamagingAbility(M1PublicTests.java:798)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testInstanceVariableChampionSpeedSetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInvalidConstructor0CrowdControlAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testSetterForInstanceVariableDurationExistsInClassPowerUp" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableBaseCooldownIsPresentInClassAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testGameBoardHeightFinal" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testConstructorInitialization1400Root" classname="tests.M1PublicTests" time="0.0">
      <error>java.lang.NoSuchMethodException: model.effects.Root.&lt;init&gt;(int)&#13;
	at java.lang.Class.getConstructor0(Class.java:3074)&#13;
	at java.lang.Class.getConstructor(Class.java:1817)&#13;
	at tests.M1PublicTests.testConstructorInitialization1400Root(M1PublicTests.java:344)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testGetterForInstanceVariableDurationExistsInClassSpeedUp" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableHeroAttackDamage" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableChampionCurrentHPSetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableChampionAttackDamageSetterLogic" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testChampionsSameMaxActionsDynamic" classname="tests.M1PublicTests" time="0.0">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.GeneratedConstructorAccessor5.newInstance(Unknown Source)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.generateChampionsArrayList(M1PublicTests.java:2782)&#13;
	at tests.M1PublicTests.testChampionsSameMaxActionsDynamic(M1PublicTests.java:3283)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0&#13;
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)&#13;
	at java.util.ArrayList.get(ArrayList.java:429)&#13;
	at engine.Game.placeChampions(Game.java:88)&#13;
	at engine.Game.&lt;init&gt;(Game.java:43)&#13;
	... 14 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testInstanceVariableVillainAttackDamageSetter" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testGetterForInstanceVariableHealAmountExistsInClassHealingAbility" classname="tests.M1PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The "healAmount" instance variable in class HealingAbility is a READ variable.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M1PublicTests.testGetterMethodExistsInClass(M1PublicTests.java:4710)&#13;
	at tests.M1PublicTests.testGetterForInstanceVariableHealAmountExistsInClassHealingAbility(M1PublicTests.java:803)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testInstanceVariableVillainCurrentActionPointsSetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testAbilitiesSameName" classname="tests.M1PublicTests" time="0.0">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.GeneratedConstructorAccessor5.newInstance(Unknown Source)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.generateAbilitiesArrayListsFromCSV(M1PublicTests.java:2663)&#13;
	at tests.M1PublicTests.testAbilitiesSameName(M1PublicTests.java:3437)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0&#13;
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)&#13;
	at java.util.ArrayList.get(ArrayList.java:429)&#13;
	at engine.Game.placeChampions(Game.java:88)&#13;
	at engine.Game.&lt;init&gt;(Game.java:43)&#13;
	... 14 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testInstanceVariableChampionAttackDamageGetterLogic" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableVillainSpeedSetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableHeroSpeedGetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testAbilitiesSameClass" classname="tests.M1PublicTests" time="0.0">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.GeneratedConstructorAccessor5.newInstance(Unknown Source)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.generateAbilitiesArrayListsFromCSV(M1PublicTests.java:2663)&#13;
	at tests.M1PublicTests.testAbilitiesSameClass(M1PublicTests.java:3412)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0&#13;
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)&#13;
	at java.util.ArrayList.get(ArrayList.java:429)&#13;
	at engine.Game.placeChampions(Game.java:88)&#13;
	at engine.Game.&lt;init&gt;(Game.java:43)&#13;
	... 14 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testInstanceVariableDurationIsPrivateInClassEffect" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableCastAreaIsPresentInClassAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testGetterLogicForInstanceVariableDurationeffect00int26InClassEffect" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableManaCostIsNotPresentInClassHealingAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testGetterForInstanceVariableManaCostExistsInClassAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableLocationGetter" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableCurrentCooldownIsPrivateInClassAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testGetterForInstanceVariableNameExistsInClassShield" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testConstructor0Silence" classname="tests.M1PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Missing constructor with int  parameter in Silence class.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at org.junit.Assert.assertFalse(Assert.java:64)&#13;
	at tests.M1PublicTests.testConstructorExists(M1PublicTests.java:4894)&#13;
	at tests.M1PublicTests.testConstructor0Silence(M1PublicTests.java:202)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testInstanceVariableChampionAppliedEffectsSetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testChampionsSameManaDynamic" classname="tests.M1PublicTests" time="0.001">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.GeneratedConstructorAccessor5.newInstance(Unknown Source)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.generateChampionsArrayList(M1PublicTests.java:2782)&#13;
	at tests.M1PublicTests.testChampionsSameManaDynamic(M1PublicTests.java:3252)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0&#13;
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)&#13;
	at java.util.ArrayList.get(ArrayList.java:429)&#13;
	at engine.Game.placeChampions(Game.java:88)&#13;
	at engine.Game.&lt;init&gt;(Game.java:43)&#13;
	... 14 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testInstanceVariableHeroConditionGetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableChampionMaxActionPointsPerTurnSetterLogic" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableBaseCooldownIsNotPresentInClassDamagingAbility" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testAbilitiesSameBaseCoolDownDynamic" classname="tests.M1PublicTests" time="0.0">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.GeneratedConstructorAccessor5.newInstance(Unknown Source)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.generateAbilitiesArrayLists(M1PublicTests.java:2613)&#13;
	at tests.M1PublicTests.testAbilitiesSameBaseCoolDownDynamic(M1PublicTests.java:3752)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0&#13;
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)&#13;
	at java.util.ArrayList.get(ArrayList.java:429)&#13;
	at engine.Game.placeChampions(Game.java:88)&#13;
	at engine.Game.&lt;init&gt;(Game.java:43)&#13;
	... 14 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testEmptyConstructorGameActionException" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testSetterForInstanceVariableNameExistsInClassSilence" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariablePlayerTeamGetterLogic" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testSetterForInstanceVariableTypeExistsInClassStun" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableHeroLocation" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableChampionLocationGetterLogic" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableChampionMaxActionPointsPerTurnGetterLogic" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testEnumValuesAreaOfEffect" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableHeroAttackDamageGetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInvalidConstructor0HealingAbility" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testGetterForInstanceVariableDurationExistsInClassEmbrace" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testGetterForInstanceVariableNameExistsInClassSilence" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testConstructor0SpeedUp" classname="tests.M1PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Missing constructor with int  parameter in SpeedUp class.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at org.junit.Assert.assertFalse(Assert.java:64)&#13;
	at tests.M1PublicTests.testConstructorExists(M1PublicTests.java:4894)&#13;
	at tests.M1PublicTests.testConstructor0SpeedUp(M1PublicTests.java:190)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testInstanceVariableGameSecondPlayerGetter" classname="tests.M1PublicTests" time="0.001">
      <failure>java.lang.AssertionError: The "secondPlayer" instance variable in class Game is a READ variable.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M1PublicTests.testGetterMethodExistsInClass(M1PublicTests.java:4710)&#13;
	at tests.M1PublicTests.testInstanceVariableGameSecondPlayerGetter(M1PublicTests.java:2307)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testInstanceVariableChampionSpeedSetterLogic" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableNameIsPrivateInClassAbility" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableChampionAttackRangePresent" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableChampionAttackRangePrivate" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testChampionsSameClass" classname="tests.M1PublicTests" time="0.001">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.GeneratedConstructorAccessor5.newInstance(Unknown Source)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.generateChampionsArrayListsFromCSV(M1PublicTests.java:2889)&#13;
	at tests.M1PublicTests.testChampionsSameClass(M1PublicTests.java:2980)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0&#13;
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)&#13;
	at java.util.ArrayList.get(ArrayList.java:429)&#13;
	at engine.Game.placeChampions(Game.java:88)&#13;
	at engine.Game.&lt;init&gt;(Game.java:43)&#13;
	... 14 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testChampionsSameMaxHP" classname="tests.M1PublicTests" time="0.0">
      <error>java.lang.reflect.InvocationTargetException&#13;
	at sun.reflect.GeneratedConstructorAccessor5.newInstance(Unknown Source)&#13;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&#13;
	at tests.M1PublicTests.generateChampionsArrayListsFromCSV(M1PublicTests.java:2889)&#13;
	at tests.M1PublicTests.testChampionsSameMaxHP(M1PublicTests.java:3005)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0&#13;
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)&#13;
	at java.util.ArrayList.get(ArrayList.java:429)&#13;
	at engine.Game.placeChampions(Game.java:88)&#13;
	at engine.Game.&lt;init&gt;(Game.java:43)&#13;
	... 14 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testInstanceVariableHeroSpeedSetter" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testSetterForInstanceVariableNameExistsInClassSpeedUp" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableChampionAttackDamageGetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableChampionAttackDamagePresent" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableChampionAttackDamagePrivate" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testInstanceVariableChampionSpeedGetterLogic" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableHeroAppliedEffectsGetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableSecondPlayerInGame" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariableHeroConditionSetter" classname="tests.M1PublicTests" time="0.0"/>
    <testcase name="testInstanceVariablePlayerTeamGetter" classname="tests.M1PublicTests" time="0.001"/>
    <testcase name="testGetterForInstanceVariableNameExistsInClassShock" classname="tests.M1PublicTests" time="0.0"/>
  </testsuite>
</testrun>
