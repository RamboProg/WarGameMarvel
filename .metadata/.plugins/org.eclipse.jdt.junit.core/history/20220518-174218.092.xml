<?xml version="1.0" encoding="UTF-8"?><testrun name="M2PublicTests" project="Marvel Ultimate War" tests="333" started="333" failures="199" errors="0" ignored="0">
  <testsuite name="tests.M2PublicTests" time="0.152">
    <testcase name="testCastHealingAbilityTEAMTARGETCovers" classname="tests.M2PublicTests" time="0.018"/>
    <testcase name="testAntiHeroAttackVillainLeft" classname="tests.M2PublicTests" time="0.007">
      <failure>java.lang.AssertionError: The HP of the villain attacked by an antihero is not updated correctly. Expected 34 but was 100.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testAntiHeroAttackVillainLeft(M2PublicTests.java:22032)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testExecuteExistsInCrowdControlAbility" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Method "execute" in class "CrowdControlAbility" should throw the exception called "java.lang.CloneNotSupportedException".&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testExecuteExistsInCrowdControlAbility(M2PublicTests.java:7337)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastDamagingAbilityTEAMTARGET1" classname="tests.M2PublicTests" time="0.002">
      <failure>java.lang.AssertionError: Casting damaging ability with TEAMTARGET is not applied correctly on targets within range, current HP expected:&lt;0&gt; but was:&lt;20&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at tests.M2PublicTests.testCastDamagingAbilityTEAMTARGET1(M2PublicTests.java:12311)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastDamagingAbilityTEAMTARGET2" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Casting damaging ability with TEAMTARGET is not applied correctly on targets within range, current HP expected:&lt;0&gt; but was:&lt;34&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at tests.M2PublicTests.testCastDamagingAbilityTEAMTARGET2(M2PublicTests.java:12376)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastDamagingAbilityTEAMTARGET3" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Casting damaging ability with TEAMTARGET is not applied correctly on targets within range, current HP expected:&lt;21&gt; but was:&lt;34&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at tests.M2PublicTests.testCastDamagingAbilityTEAMTARGET3(M2PublicTests.java:12436)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastDamagingAbilityTEAMTARGET4" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: Casting damaging ability with TEAMTARGET is not applied correctly on targets within range, current HP expected:&lt;29&gt; but was:&lt;39&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at tests.M2PublicTests.testCastDamagingAbilityTEAMTARGET4(M2PublicTests.java:12500)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testRemoveExistsInEmbrace" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="applyLogicDisarmDamagingAbility" classname="tests.M2PublicTests" time="0.003"/>
    <testcase name="testCastCCAbilitySurround1" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastCCAbilitySurround1(M2PublicTests.java:14602)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastCCAbilitySurround2" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastCCAbilitySurround2(M2PublicTests.java:14702)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastCCAbilitySurround6" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastCCAbilitySurround6(M2PublicTests.java:14801)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastCCAbilitySurround7" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastCCAbilitySurround7(M2PublicTests.java:14850)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testInvalidMoveRooted" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="testAttackOutsideAttackRange" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="testInvalidMoveObstacleCoverLeft" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testCastDamagingAbilitySingleTargetUpdateCooldown" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: class exceptions.AbilityUseException occurred while trying to cast ability on single target&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastDamagingAbilitySingleTargetUpdateCooldown(M2PublicTests.java:8077)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastDamagingAbilitySurroundOutOfRange2" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastDamagingAbilitySurroundOutOfRange2(M2PublicTests.java:13901)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastDamagingAbilitySurroundOutOfRange3" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastDamagingAbilitySurroundOutOfRange3(M2PublicTests.java:14020)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastDamagingAbilitySurroundOutOfRange4" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastDamagingAbilitySurroundOutOfRange4(M2PublicTests.java:14139)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastDamagingAbilitySurroundOutOfRange5" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastDamagingAbilitySurroundOutOfRange5(M2PublicTests.java:14383)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testEndTurnUpdatedCooldown" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: endTurn should update the cooldown of the champion's abilities.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testEndTurnUpdatedCooldown(M2PublicTests.java:24390)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testEndTurnCallsRemoveEffect" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testCastAbilitySingleTargetInCoolDown" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="testCastCCAbilityDIRECTIONALOutOfRangeDown" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testCastCCAbilityDIRECTIONALOutOfRangeLeft" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="applyLogicShieldBlockDmgAbilityDirectional" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testCastHealingAbilitySingleTargetUpdateCooldown" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: class java.lang.IndexOutOfBoundsException occurred&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.createGame(M2PublicTests.java:27126)&#13;
	at tests.M2PublicTests.testCastHealingAbilitySingleTargetUpdateCooldown(M2PublicTests.java:7991)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastDamagingAbilityDirectionalRight" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Casting right damaging ability on target within range should update target's HP expected:&lt;30&gt; but was:&lt;63&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at tests.M2PublicTests.testCastDamagingAbilityDirectionalRight(M2PublicTests.java:10893)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="removeLogicStunCondition" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="testSetCurrentHPExistsDamageable" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testCastHealingAbilitySurroundOutOfRange1" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastHealingAbilitySurroundOutOfRange1(M2PublicTests.java:13218)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastHealingAbilitySurroundOutOfRange2" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastHealingAbilitySurroundOutOfRange2(M2PublicTests.java:13336)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastHealingAbilitySurroundOutOfRange4" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastHealingAbilitySurroundOutOfRange4(M2PublicTests.java:13452)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastHealingAbilitySurroundOutOfRange5" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastHealingAbilitySurroundOutOfRange5(M2PublicTests.java:13619)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testVillainUseLeaderAbility" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testVillainAttackAntiHeroUp" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The HP of the antihero attacked by a villain is not updated correctly. Expected 79 but was 100.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testVillainAttackAntiHeroUp(M2PublicTests.java:21532)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="applyLogicShockAttackDamage" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testCastCCAbilityTeamTargetSameTeam1" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Casting CC ability should apply PowerUp effect on the valid targets but it's not found in the applied effects&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.containsEffect(M2PublicTests.java:26775)&#13;
	at tests.M2PublicTests.testCastCCAbilityTeamTargetSameTeam1(M2PublicTests.java:12671)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastCCAbilityTeamTargetSameTeam2" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: Casting CC ability should apply SpeedUp effect on the valid targets but it's not found in the applied effects&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.containsEffect(M2PublicTests.java:26775)&#13;
	at tests.M2PublicTests.testCastCCAbilityTeamTargetSameTeam2(M2PublicTests.java:12721)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastCCAbilityTeamTargetSameTeam4" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Casting CC ability should apply Shield effect on the valid targets but it's not found in the applied effects&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.containsEffect(M2PublicTests.java:26775)&#13;
	at tests.M2PublicTests.testCastCCAbilityTeamTargetSameTeam4(M2PublicTests.java:12771)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="executeLogicHealingAbility" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="removeLogicEmbraceSpeed" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="testClassIsSubclassChampionDisarmedException" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: ChampionDisarmedException class should be a subclass from GameActionException. expected:&lt;class exceptions.GameActionException&gt; but was:&lt;class java.lang.Exception&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at tests.M2PublicTests.testClassIsSubclass(M2PublicTests.java:26674)&#13;
	at tests.M2PublicTests.testClassIsSubclassChampionDisarmedException(M2PublicTests.java:16668)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastDmgAbilitySingleTargetWithinRange1" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class exceptions.AbilityUseException occurred while trying to cast ability on single target&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastDmgAbilitySingleTargetWithinRange1(M2PublicTests.java:11279)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testConstructorChampionDisarmedExceptionConstructor1Initialization" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testCastDamagingAbilityTEAMTARGETCovers" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="testCastDamgingAbilitySINGLETARGETUpadteAP" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Casting a single target ability should update the champion's action points correctly expected:&lt;181&gt; but was:&lt;183&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at tests.M2PublicTests.testCastDamgingAbilitySINGLETARGETUpadteAP(M2PublicTests.java:8419)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastHealingAbilityDirectionalUpadteCooldown" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: Casting a directional target healing ability should set the ability cooldown correctly expected:&lt;3&gt; but was:&lt;0&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at tests.M2PublicTests.testCastHealingAbilityDirectionalUpadteCooldown(M2PublicTests.java:7901)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testAntiHeroAttackHeroRight" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: The HP of the hero attacked by an antihero is not updated correctly. Expected 96 but was 100.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testAntiHeroAttackHeroRight(M2PublicTests.java:21782)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastHealingAbilitySingleTargetCoverCell" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: class java.lang.IndexOutOfBoundsException occurred&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.createGame(M2PublicTests.java:27126)&#13;
	at tests.M2PublicTests.testCastHealingAbilitySingleTargetCoverCell(M2PublicTests.java:11692)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastHealingAbilityTeamTargetSameTeam2" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Casting healing ability with TEAMTARGET is not applied correctly on current champ, current HP expected:&lt;64&gt; but was:&lt;37&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at tests.M2PublicTests.testCastHealingAbilityTeamTargetSameTeam2(M2PublicTests.java:11878)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastHealingAbilityTeamTargetSameTeam4" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: Casting healing ability with TEAMTARGET is not applied correctly on current champ, current HP expected:&lt;77&gt; but was:&lt;39&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at tests.M2PublicTests.testCastHealingAbilityTeamTargetSameTeam4(M2PublicTests.java:11945)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastHealingAbilityTeamTargetSameTeam5" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: Casting healing ability with TEAMTARGET is not applied correctly on current champ, current HP expected:&lt;64&gt; but was:&lt;26&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at tests.M2PublicTests.testCastHealingAbilityTeamTargetSameTeam5(M2PublicTests.java:12008)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastHealingAbilityTeamTargetSameTeam6" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: Casting healing ability with TEAMTARGET is not applied correctly on current champ, current HP expected:&lt;52&gt; but was:&lt;32&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at tests.M2PublicTests.testCastHealingAbilityTeamTargetSameTeam6(M2PublicTests.java:12071)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastHealingAbilitySingleTargetWithinRange2" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Casting single target healing effect should not be applied on the opponent team, target's HP expected:&lt;18&gt; but was:&lt;42&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at tests.M2PublicTests.testCastHealingAbilitySingleTargetWithinRange2(M2PublicTests.java:11160)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastCCAbilityTeamTargetSameTeamOutOfRange" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Casting CC ability should apply SpeedUp effect on the valid targets but it's not found in the applied effects&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.containsEffect(M2PublicTests.java:26775)&#13;
	at tests.M2PublicTests.testCastCCAbilityTeamTargetSameTeamOutOfRange(M2PublicTests.java:12821)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastCCAbilitySingleTargetUpdateCooldown" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class java.lang.IndexOutOfBoundsException occurred&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.createGame(M2PublicTests.java:27126)&#13;
	at tests.M2PublicTests.testCastCCAbilitySingleTargetUpdateCooldown(M2PublicTests.java:8098)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="removeLogicEmbraceMana" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testAntiHeroAttackVillainRight" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The HP of the villain attacked by an antihero is not updated correctly. Expected 55 but was 100.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testAntiHeroAttackVillainRight(M2PublicTests.java:22157)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastAbilitySingleTargetNotEnoughResources" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: Current Champion does not have enough resources to cast this ability on a single target, an exception should be thrown&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastAbilitySingleTargetNotEnoughResources(M2PublicTests.java:11061)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testEndTurnRemovesStunnedChampion" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: endTurn should remove any stunned champions from the turnOrder queue till an active champion is found.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testEndTurnRemovesStunnedChampion(M2PublicTests.java:24909)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testChampionImplementsDamageable" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testHeroAttackCoverUp" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The HP of the attacked cover is not updated correctly. Expected 622 but was 633.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testHeroAttackCoverUp(M2PublicTests.java:23292)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastHealingAbilityDirectionalLeftOpponentTeam" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: Casting Left healing ability should not be applied on opponent team targets within range, current HP expected:&lt;36&gt; but was:&lt;72&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at tests.M2PublicTests.testCastHealingAbilityDirectionalLeftOpponentTeam(M2PublicTests.java:10337)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastCCAbilityDirectionalDownSameTeam" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testExecuteExistsInHealingAbility" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testCastDamagingAbilityCoversSurroundOutOfRange2" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastDamagingAbilityCoversSurroundOutOfRange2(M2PublicTests.java:14488)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastAbilityCooldownUpdatedCorrectlyHealing" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Casting a healing ability should set the ability cooldown correctly expected:&lt;3&gt; but was:&lt;0&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at tests.M2PublicTests.testCastAbilityCooldownUpdatedCorrectlyHealing(M2PublicTests.java:7832)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="applyLogicEmbraceCurrentHP" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testGetCurrentChampionLogic2" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="applyLogicEmbraceMana" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="applyLogicRoot" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testInvalidMoveLeft" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testValidMoveRight" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="testCastAbilityDirectionNotEnoughResources2" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Current Champion does not have enough resources for this ability, an exception should be thrown&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastAbilityDirectionNotEnoughResources2(M2PublicTests.java:8739)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastCCAbilityTeamTargetSameTeamDeBuff" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testCastCCAbilityDirectionalDown" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Casting down Stun crowd control ability on target within range should update target's condition expected:&lt;INACTIVE&gt; but was:&lt;ACTIVE&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at tests.M2PublicTests.testCastCCAbilityDirectionalDown(M2PublicTests.java:9651)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastCCAbilityDirectionalLeft" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: Casting left Stun crowd control ability on target within range should change target's condition expected:&lt;INACTIVE&gt; but was:&lt;ACTIVE&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at tests.M2PublicTests.testCastCCAbilityDirectionalLeft(M2PublicTests.java:9915)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="applyLogicStunNoChange" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="applyLogicShieldNoChange" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testChampionClassImplementsDamageable" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="testCastDamagingAbilityTEAMTARGETOutOfRange" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testCastCCDEBUFFAbilitySurround1" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastCCDEBUFFAbilitySurround1(M2PublicTests.java:15127)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastCCDEBUFFAbilitySurround2" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastCCDEBUFFAbilitySurround2(M2PublicTests.java:15184)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastCCDEBUFFAbilitySurround3" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastCCDEBUFFAbilitySurround3(M2PublicTests.java:15297)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastCCDEBUFFAbilitySurround4" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastCCDEBUFFAbilitySurround4(M2PublicTests.java:15403)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastCCDEBUFFAbilitySurround5" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastCCDEBUFFAbilitySurround5(M2PublicTests.java:15510)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="applyLogicShieldBlockRemove" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The method "attack" in class Game should remove the "Shield" effect from the target's "appliedEffects" arraylist. expected:&lt;[]&gt; but was:&lt;[model.effects.Shield@182804b]&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at tests.M2PublicTests.applyLogicShieldBlockRemove(M2PublicTests.java:5000)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testAttackedChampionHasShieldEffect" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="applyLogicRootMove" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="testChampionCompareTo" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testCastDamagingAbilityDirectionalDownObstcale" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Casting down damaging ability is not applied correctly, should affect covers'HP expected:&lt;603&gt; but was:&lt;620&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at tests.M2PublicTests.testCastDamagingAbilityDirectionalDownObstcale(M2PublicTests.java:10649)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="applyLogicSpeedUpSpeed" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="testAttackedChampionRemovedFromQueue" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Champion should be removed from the turnOrder queue after being attacked if HP reaches 0.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testAttackedChampionRemovedFromQueue(M2PublicTests.java:23838)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testAntiHeroUseLeaderAbilityMethod" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The method useLeaderAbility in class AntiHero should Apply the stun". expected:&lt;INACTIVE&gt; but was:&lt;ROOTED&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at tests.M2PublicTests.testAntiHeroUseLeaderAbilityMethod(M2PublicTests.java:16230)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testEndTurnPreparesChampion" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="removeLogicSilenceMaxActions" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testCastCCAbilityCoversSurround3" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastCCAbilityCoversSurround3(M2PublicTests.java:15070)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testMoveNotEnoughActionPoints" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="testValidMoveUpBoardUpdated" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Board not updated correctly after champion moved UP.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testValidMoveUpBoardUpdated(M2PublicTests.java:18466)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testHeroAttackVillainUp" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The HP of the villain attacked by a hero  is not updated correctly. Expected 30 but was 100.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testHeroAttackVillainUp(M2PublicTests.java:20423)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastDamagingAbilityChampionActionPointsUpdatedCorrectly" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Trying to cast an ability but class exceptions.NotEnoughResourcesException occurred&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastDamagingAbilityChampionActionPointsUpdatedCorrectly(M2PublicTests.java:8594)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastHealingAbilityDirectionalLeftObstcale" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="removeLogicShockMaxActions" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testExecuteExistsAbility" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Method "execute" in class "Ability" should be abstract.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testExecuteExistsAbility(M2PublicTests.java:7280)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testHeroAttackVillainRight" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: The HP of the villain attacked by a hero is not updated correctly. Expected 27 but was 100.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testHeroAttackVillainRight(M2PublicTests.java:20180)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastCCAbilitySingleTargetOnCurrentChampDeBuff" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class java.lang.IndexOutOfBoundsException occurred&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.createGame(M2PublicTests.java:27126)&#13;
	at tests.M2PublicTests.testCastCCAbilitySingleTargetOnCurrentChampDeBuff(M2PublicTests.java:11594)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastCCAbilityDirectionalDownUpadetCooldown" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class java.lang.IndexOutOfBoundsException occurred&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.createGame(M2PublicTests.java:27126)&#13;
	at tests.M2PublicTests.testCastCCAbilityDirectionalDownUpadetCooldown(M2PublicTests.java:7930)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="removeLogicPowerUpHealingAmount" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="applyLogicPowerUpHealingAmount" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testCastHealingAbilitySingleTargetEmptyCell" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class java.lang.IndexOutOfBoundsException occurred&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.createGame(M2PublicTests.java:27126)&#13;
	at tests.M2PublicTests.testCastHealingAbilitySingleTargetEmptyCell(M2PublicTests.java:11743)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="applyLogicStunCondition" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testEndTurnUpdatesStunnedChampion2" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: endTurn should update the cooldown of any stunned champion's abilities.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testEndTurnUpdatesStunnedChampion2(M2PublicTests.java:25245)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastHealingAbilityDIRECTIONALOutOfRangeUp" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testRemoveExistsInPowerUp" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testCastCCAbilityTeamTargetDeBuff1" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: Casting CC ability should apply Disarm effect on the valid targets but it's not found in the applied effects&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.containsEffect(M2PublicTests.java:26775)&#13;
	at tests.M2PublicTests.testCastCCAbilityTeamTargetDeBuff1(M2PublicTests.java:12930)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastCCAbilityTeamTargetDeBuff3" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Casting CC ability should apply Shock effect on the valid targets but it's not found in the applied effects&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.containsEffect(M2PublicTests.java:26775)&#13;
	at tests.M2PublicTests.testCastCCAbilityTeamTargetDeBuff3(M2PublicTests.java:12981)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testEndTurnUpdatesStunnedChampion" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testConstructorLeaderNotCurrentlExceptionConstructor2Initialization" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: The constructor of the LeaderNotCurrentException class should initialize the instance variable "message" correctly. expected:&lt;Error&gt; but was:&lt;null&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at tests.M2PublicTests.testConstructorLeaderNotCurrentlExceptionConstructor2Initialization(M2PublicTests.java:16619)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testRemoveExistsInDodge" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testCastCCAbilityChampionActionPointsUpdatedCorrectly" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Casting crowd control ability with enough action points should update the champion's action points correctly expected:&lt;263&gt; but was:&lt;264&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at tests.M2PublicTests.testCastCCAbilityChampionActionPointsUpdatedCorrectly(M2PublicTests.java:8552)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastDamagingAbilityDirectionalRightSameTeam" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Casting right damaging ability should not be applied on same team targets within range, current HP expected:&lt;64&gt; but was:&lt;54&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at tests.M2PublicTests.testCastDamagingAbilityDirectionalRightSameTeam(M2PublicTests.java:10953)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastCCAbilityDirectionalUpBuff" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: class java.lang.IndexOutOfBoundsException occurred&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.createGame(M2PublicTests.java:27126)&#13;
	at tests.M2PublicTests.testCastCCAbilityDirectionalUpBuff(M2PublicTests.java:9447)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testInvalidMoveRight" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="removeLogicShockActions" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testCastDamagingAbilityDirectionalUp" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: Casting up damaging ability on target within range should update target's HP expected:&lt;32&gt; but was:&lt;68&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at tests.M2PublicTests.testCastDamagingAbilityDirectionalUp(M2PublicTests.java:10587)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="applyLogicShockMaxActions" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testCastCCAbilityOpponentTeamSurround2" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastCCAbilityOpponentTeamSurround2(M2PublicTests.java:15011)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testAntiHeroAttackAntiHeroLeft" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The HP of the antihero attacked by an antihero is not updated correctly. Expected 78 but was 100.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testAntiHeroAttackAntiHeroLeft(M2PublicTests.java:22406)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="removeLogicEmbraceAttackDamage" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testAntiHeroAttackHeroLeft" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The HP of the hero attacked by an antihero is not updated correctly. Expected 36 but was 100.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testAntiHeroAttackHeroLeft(M2PublicTests.java:21657)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testEndTurnRemovesStunnedChampionExpiredEffects" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: endTurn should remove any expired effects from any stunned champion's appliedEffects arraylist before skipping the stunned champion's turn.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testEndTurnRemovesStunnedChampionExpiredEffects(M2PublicTests.java:25616)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="removeLogicSilenceActions" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="invalidAttackSameTeam" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testVillainAttackHeroLeft" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The HP of the hero attacked by a villain is not updated correctly. Expected 27 but was 100.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testVillainAttackHeroLeft(M2PublicTests.java:20666)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testVillainAttackAntiHeroRight" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: The HP of the antihero attacked by a villain is not updated correctly. Expected 75 but was 100.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testVillainAttackAntiHeroRight(M2PublicTests.java:21282)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testInvalidMoveObstacleCoverUp" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testRemoveExistsInDisarm" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testEndTurnRemovesChampion" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="executeLogicCrowdControl" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: The method "execute" in class "CrowdControlAbility " should clone "effect" for each "target".&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at org.junit.Assert.assertFalse(Assert.java:64)&#13;
	at tests.M2PublicTests.executeLogicCrowdControl(M2PublicTests.java:28659)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="executeLogicDamagingAbility" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testAntiHeroAttackHeroUp" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: The HP of the hero attacked by an antihero is not updated correctly. Expected 37 but was 100.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testAntiHeroAttackHeroUp(M2PublicTests.java:21907)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastDmgAbilityUPRemovingDeadTarget" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: After casting a damaging ability UP, if the target is dead it should be removed from the board&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testCastDmgAbilityUPRemovingDeadTarget(M2PublicTests.java:15819)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testInvalidMoveObstacleCoverRight" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="testHeroAttackHeroUp" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: The HP of the hero attacked by a hero is not updated correctly. Expected 52 but was 100.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testHeroAttackHeroUp(M2PublicTests.java:19459)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testUpdateActionPointsAfterAttack" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The currentActionPoints of the attacking champion is not updated correctly. Expected 0 but was 2.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testUpdateActionPointsAfterAttack(M2PublicTests.java:22748)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCloneExistsEffect" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="applyLogicDodgeAttackResources" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: The method "attack" in class Game should set the correct value of variable "currentActionPoints" after a successful attack performed on a target with a dodge effect that is not successfully applied to the attack. expected:&lt;1&gt; but was:&lt;3&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at tests.M2PublicTests.applyLogicDodgeAttackResources(M2PublicTests.java:26196)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastDmgAbilitySurroundRemovingDeadTarget" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while trying to cast ability on surround targets&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastDmgAbilitySurroundRemovingDeadTarget(M2PublicTests.java:15774)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastCCAbilityDirectionalLeftObstcale" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Casting left crowd control ability is not applied correctly, should affect all the targets within the given range, target's condition expected:&lt;INACTIVE&gt; but was:&lt;ACTIVE&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at tests.M2PublicTests.testCastCCAbilityDirectionalLeftObstcale(M2PublicTests.java:9849)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testEndTurnCallsRemoveEffectOnStunnedChampion" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testCastDamagingAbilitySurround2" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastDamagingAbilitySurround2(M2PublicTests.java:13849)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastDamagingAbilitySurround3" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastDamagingAbilitySurround3(M2PublicTests.java:13968)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastDamagingAbilitySurround4" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastDamagingAbilitySurround4(M2PublicTests.java:14087)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastDamagingAbilitySurround5" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastDamagingAbilitySurround5(M2PublicTests.java:14207)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastDamagingAbilitySurround6" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastDamagingAbilitySurround6(M2PublicTests.java:14264)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastDamagingAbilitySurround7" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastDamagingAbilitySurround7(M2PublicTests.java:14332)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testConstructorLeaderNotCurrentExceptionConstructor1" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testCastHealingAbilityDIRECTIONALOutOfRangeLeft" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="removeLogicShockSpeed" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The method "remove" in class Shock should set the correct value of variable "speed". expected:&lt;100&gt; but was:&lt;0&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at tests.M2PublicTests.removeLogicShockSpeed(M2PublicTests.java:2297)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="invalidAttackNotEnoughActionPoints" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Trying to attack without enough action points, an exception should be thrown&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.invalidAttackNotEnoughActionPoints(M2PublicTests.java:23085)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testUseLeaderAbilityVillianTargets" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="removeLogicPowerUpDamageAmount" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testCastHealingAbilityDirectionalUpadteMana" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Casting a directional target healing ability should update the champion's mana correctly expected:&lt;213&gt; but was:&lt;215&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at tests.M2PublicTests.testCastHealingAbilityDirectionalUpadteMana(M2PublicTests.java:8176)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testVillainAttackHeroRight" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: The HP of the hero attacked by a villain is not updated correctly. Expected 55 but was 100.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testVillainAttackHeroRight(M2PublicTests.java:20546)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testNotleaderException" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testCastDmgAbilityDIRECTIONALOutOfRangeUp" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testClassIsSubclassLeaderNotCurrentException" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="testCastDamagingAbilityTEAMTARGETOnSameTeam" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testCastCCAbilityDirectionalUpBuffOpponentTeam" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testAntiHeroAttackAntiHeroRight" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: The HP of the antihero attacked by an antihero is not updated correctly. Expected 77 but was 100.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testAntiHeroAttackAntiHeroRight(M2PublicTests.java:22530)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testVillainAttackVillainLeft" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The HP of the villain attacked by a villain is not updated correctly. Expected 69 but was 100.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testVillainAttackVillainLeft(M2PublicTests.java:21033)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastCCAbilityDirectionalRightBuff" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: class java.lang.IndexOutOfBoundsException occurred&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.createGame(M2PublicTests.java:27126)&#13;
	at tests.M2PublicTests.testCastCCAbilityDirectionalRightBuff(M2PublicTests.java:9944)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testHeroAttackAntiHeroDown" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The HP of antihero attacked by a hero is not updated correctly. Expected 90 but was 100.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testHeroAttackAntiHeroDown(M2PublicTests.java:19937)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testHeroAttackAntiHeroLeft" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The HP of the antihero attacked by a hero is not updated correctly. Expected 36 but was 100.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testHeroAttackAntiHeroLeft(M2PublicTests.java:19817)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="removeLogicDodgeSpeed" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The method "remove" in class "Dodge" should set the correct value of variable "speed". expected:&lt;100&gt; but was:&lt;105&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at tests.M2PublicTests.removeLogicDodgeSpeed(M2PublicTests.java:6935)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastDamagingAbilityDirectionalLeft" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="applyLogicShieldBlockRemove2" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The method "attack" in class Game should call the "remove" method of "Shield" class after the target has used the effect. The "remove" method should set the correct value of "speed". expected:&lt;100&gt; but was:&lt;102&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at tests.M2PublicTests.removeLogicShieldSpeed(M2PublicTests.java:5288)&#13;
	at tests.M2PublicTests.applyLogicShieldBlockRemove2(M2PublicTests.java:5243)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="removeLogicShieldSpeed" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="testCastHealingAbilitySurroundCovers1" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastHealingAbilitySurroundCovers1(M2PublicTests.java:13671)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastCCAbilityDirectionalUpadteMana1" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: Casting a directional target healing ability should update the champion's mana correctly expected:&lt;224&gt; but was:&lt;226&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at tests.M2PublicTests.testCastCCAbilityDirectionalUpadteMana1(M2PublicTests.java:8273)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="applyLogicShieldBlockDmgAbilitySurround" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: exceptions.NotEnoughResourcesException occurred while invoking "castAbility" method on an instance of "Game".&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.applyLogicShieldBlockDmgAbilitySurround(M2PublicTests.java:7209)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testApplyExistsEffect" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Method "apply" in class "Ability" should be abstract.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testApplyExistsEffect(M2PublicTests.java:260)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testEndTurnMethodExists" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="removeLogicEmbraceCurrentHp" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testIsCastAbilityMethodExists" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testCastAbilityInCoolDown" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Trying to cast ability in cool down, an exception should be thrown&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastAbilityInCoolDown(M2PublicTests.java:7645)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testGetLocationExistsDamageable" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="applyLogicShockActions" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testAntiHeroAttackVillainUp" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The HP of the villain attacked by an antihero is not updated correctly. Expected 94 but was 100.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testAntiHeroAttackVillainUp(M2PublicTests.java:22282)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="applyLogicSilenceActions" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="testCheckGameOverPlayerOneWins" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: checkGameOver should return the winning player. expected:&lt;engine.Player@14651df&gt; but was:&lt;null&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at tests.M2PublicTests.testCheckGameOverPlayerOneWins(M2PublicTests.java:16876)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testRemoveCoverAfterAttack" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Cover should be removed after being attacked if HP reaches 0.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testRemoveCoverAfterAttack(M2PublicTests.java:23591)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="applyLogicShieldBlock" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="testCastHealingAbilitySELFTARGET" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Casting healing ability with SELFTARGET is not applied correctly on current HP expected:&lt;28&gt; but was:&lt;15&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at tests.M2PublicTests.testCastHealingAbilitySELFTARGET(M2PublicTests.java:8627)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastCCAbilitySingleTargetWithinRangeBuff2" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: Casting single target crowd control ability with buff effect is not applied correctly, an appropriate exception should be thrown&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastCCAbilitySingleTargetWithinRangeBuff2(M2PublicTests.java:11376)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastCCAbilitySingleTargetWithinRangeBuff3" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class java.lang.IndexOutOfBoundsException occurred&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.createGame(M2PublicTests.java:27126)&#13;
	at tests.M2PublicTests.testCastCCAbilitySingleTargetWithinRangeBuff3(M2PublicTests.java:11406)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastDamagingAbilityDirectionalDownSameTeam" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="testCheckGameOverMethodExists" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="applyLogicShieldSpeed" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testApplyExistsInRoot" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testApplyExistsInStun" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="testCastCCAbilityChampionManaUpdatedCorrectly" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Casting a crowd control ability with enough mana should update the champion's mana correctly expected:&lt;148&gt; but was:&lt;160&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at tests.M2PublicTests.testCastCCAbilityChampionManaUpdatedCorrectly(M2PublicTests.java:7768)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testHeroAttackCoverRight" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The HP of the attacked cover is not updated correctly. Expected 162 but was 163.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testHeroAttackCoverRight(M2PublicTests.java:23488)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="applyLogicSilenceMaxActions" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="testCastAbilityNotEnoughResources" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Current Champion does not have enough resources for this ability, an exception should be thrown&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastAbilityNotEnoughResources(M2PublicTests.java:7691)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="removeLogicSpeedUpMaxActions" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="removeLogicRoot" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The method "remove" in class "Root" should set the correct value of variable "condition". If the champion already has another ROOT effect, then his condition should remain ROOTED after removing "Root" effect. expected:&lt;ROOTED&gt; but was:&lt;null&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at tests.M2PublicTests.removeLogicRoot(M2PublicTests.java:6581)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testEndTurnUpdatedActionPoints" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="testCastDamagingAbilityCoversSurround3" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastDamagingAbilityCoversSurround3(M2PublicTests.java:14547)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastCCDEBUFFAbilitySurroundOutOfRange2" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastCCDEBUFFAbilitySurroundOutOfRange2(M2PublicTests.java:15240)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastCCDEBUFFAbilitySurroundOutOfRange3" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastCCDEBUFFAbilitySurroundOutOfRange3(M2PublicTests.java:15347)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastCCDEBUFFAbilitySurroundOutOfRange4" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastCCDEBUFFAbilitySurroundOutOfRange4(M2PublicTests.java:15453)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastCCDEBUFFAbilitySurroundOutOfRange5" classname="tests.M2PublicTests" time="0.002">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastCCDEBUFFAbilitySurroundOutOfRange5(M2PublicTests.java:15560)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastCCAbilitySingleTargetOnCurrentChampBuff" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class java.lang.IndexOutOfBoundsException occurred&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.createGame(M2PublicTests.java:27126)&#13;
	at tests.M2PublicTests.testCastCCAbilitySingleTargetOnCurrentChampBuff(M2PublicTests.java:11552)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testprepareChampionTurns" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testApplyExistsInShock" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="testInvalidBorderMoveUp" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Trying to move beyond a border, an exception should be thrown&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testInvalidBorderMoveUp(M2PublicTests.java:17006)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testVillainAttackVillainRight" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The HP of the villain attacked by a villain is not updated correctly. Expected 93 but was 100.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testVillainAttackVillainRight(M2PublicTests.java:20909)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCloneEffectLogic" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="testInvalidMoveUp" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="applyLogicSpeedUpNoChange" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="applyLogicDisarmAttacks" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testCastCCAbilitySELFTARGETEmbrace" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Casting CrowdControlAbility with SELFTARGET is not applied correctly on current champion's HP expected:&lt;30&gt; but was:&lt;10&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at tests.M2PublicTests.testCastCCAbilitySELFTARGETEmbrace(M2PublicTests.java:8678)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testAttackFirstTarget" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="testCastCCAbilityDirectionalUpObstcale" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testHeroAttackVillainLeft" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: The HP of the villain attacked by a hero  is not updated correctly. Expected 90 but was 100.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testHeroAttackVillainLeft(M2PublicTests.java:20302)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testRemoveExistsEffect" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Method "remove" in class "Ability" should be abstract.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testRemoveExistsEffect(M2PublicTests.java:356)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testEffectImplementsCloneable" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testDamageableIsInterface" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testAntiHeroUseLeaderAbility" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="testAntiHeroAttackAntiHeroUp" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The HP of the antihero attacked by an antihero is not updated correctly. Expected 85 but was 100.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testAntiHeroAttackAntiHeroUp(M2PublicTests.java:22654)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastHealingAbilityDirectionalUp" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Casting up healing ability on target within range should update target's HP expected:&lt;68&gt; but was:&lt;53&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at tests.M2PublicTests.testCastHealingAbilityDirectionalUp(M2PublicTests.java:10100)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastDamgingAbilityDirectionalUpadteAP" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: Casting a directional target healing ability should update the champion's action points correctly expected:&lt;133&gt; but was:&lt;135&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at tests.M2PublicTests.testCastDamgingAbilityDirectionalUpadteAP(M2PublicTests.java:8224)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="applyLogicSpeedUpActions" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="removeLogicShockAttackDamage" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The method "remove" in class Shock should set the correct value of variable "attackDamage". expected:&lt;100&gt; but was:&lt;171&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at tests.M2PublicTests.removeLogicShockAttackDamage(M2PublicTests.java:2471)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="removeLogicRootInactive" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The method "remove" in class "Root" should set the correct value of variable "condition". If the champion was INACTIVE then his condition should remain INACTIVE after removing "Root" effect. expected:&lt;INACTIVE&gt; but was:&lt;null&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at tests.M2PublicTests.removeLogicRootInactive(M2PublicTests.java:6669)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testHeroAttackCoverDown" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: The HP of the attacked cover is not updated correctly. Expected 464 but was 483.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testHeroAttackCoverDown(M2PublicTests.java:23390)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="applyLogicEmbraceAttackDamage" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testCastCCAbilityTeamTargetOutOfRange" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="testCastHealingAbilitySingleTargetUpadteMana" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class exceptions.AbilityUseException occurred while trying to cast a single target ability on target&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastHealingAbilitySingleTargetUpadteMana(M2PublicTests.java:8376)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastHealingAbilityDirectionalDown" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: Casting down healing ability on target within range should update target's HP expected:&lt;77&gt; but was:&lt;55&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at tests.M2PublicTests.testCastHealingAbilityDirectionalDown(M2PublicTests.java:10163)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="applyLogicShockNoChange" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testCastHealingAbilityDirectionalRightObstcale" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Casting right healing ability is not applied correctly, should not affect covers' HP expected:&lt;429&gt; but was:&lt;448&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at tests.M2PublicTests.testCastHealingAbilityDirectionalRightObstcale(M2PublicTests.java:10395)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastDmgAbilityDIRECTIONALOutOfRangeDown" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="testValidMoveDown" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testValidMoveLeft" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testExecuteExistsInDamagingAbility" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testGameActionExceptionAbstract" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="testCastDamagingAbilitySingleTargetOnCurrentChamp" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class java.lang.IndexOutOfBoundsException occurred&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.createGame(M2PublicTests.java:27126)&#13;
	at tests.M2PublicTests.testCastDamagingAbilitySingleTargetOnCurrentChamp(M2PublicTests.java:11504)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastDamagingAbilityDIRECTIONALOutOfRangeRight" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testCastDmgAbilityDownRemovingDeadTarget" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: After casting a damaging ability Down, if the target is dead it should be removed from the board&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testCastDmgAbilityDownRemovingDeadTarget(M2PublicTests.java:15871)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="removeLogicDisarmDamagingAbility" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: java.util.ConcurrentModificationException occurred while calling method "remove" from class "Disarm".&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.removeLogicDisarmDamagingAbility(M2PublicTests.java:5786)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testGetCurrentHPExistsDamageable" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testConstructorInvalidTargetExceptionConstructor2" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="testCastHealingAbilityDirectionalUpObstcale" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Casting up healing ability is not applied correctly, should affect all targets within range, target's HP expected:&lt;96&gt; but was:&lt;74&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at tests.M2PublicTests.testCastHealingAbilityDirectionalUpObstcale(M2PublicTests.java:10043)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastHealingAbilityDIRECTIONALOutOfRangeRight" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testCastCCAbilityDirectionalDownObstcale" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: Casting down crowd control ability is not applied correctly, should affect any target within the given range, target's condition expected:&lt;INACTIVE&gt; but was:&lt;ACTIVE&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at tests.M2PublicTests.testCastCCAbilityDirectionalDownObstcale(M2PublicTests.java:9585)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="applyLogicDodgeAttack" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The method "attack" in class Game should set the correct value of variable "currentHP".&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.applyLogicDodgeAttack(M2PublicTests.java:4494)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testHeroAttackHeroRight" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: The HP of the hero attacked by a hero is not updated correctly. Expected 75 but was 100.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testHeroAttackHeroRight(M2PublicTests.java:19697)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testConstructorInvalidTargetExceptionConstructor1Initialization" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="applyLogicSilenceNoChange" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testCastHealingAbilityTeamTargetSameTeamOutOfRange2" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: Casting healing ability with TEAMTARGET is not applied correctly on current champ, current HP expected:&lt;74&gt; but was:&lt;38&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at tests.M2PublicTests.testCastHealingAbilityTeamTargetSameTeamOutOfRange2(M2PublicTests.java:12194)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastDamagingAbilitySameTeamSurround2" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastDamagingAbilitySameTeamSurround2(M2PublicTests.java:14438)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testInvalidBorderMoveDown" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Trying to move beyond a border, an exception should be thrown&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testInvalidBorderMoveDown(M2PublicTests.java:17133)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testInvalidBorderMoveLeft" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Trying to move LEFT beyond a border, an exception should be thrown&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testInvalidBorderMoveLeft(M2PublicTests.java:17261)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastCCAbilitySINGLETARGETUpadteAP1" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: Casting a single target cc ability should update the champion's action points correctly expected:&lt;207&gt; but was:&lt;209&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at tests.M2PublicTests.testCastCCAbilitySINGLETARGETUpadteAP1(M2PublicTests.java:8515)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastAbilityCooldownUpdatedCorrectlyCCBuff" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Casting a crowd control ability should set the ability cooldown correctly expected:&lt;3&gt; but was:&lt;0&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at tests.M2PublicTests.testCastAbilityCooldownUpdatedCorrectlyCCBuff(M2PublicTests.java:7801)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testUseLeaderAbilityHeroTargets" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: Hero useLeaderAbility method should add the effect Embrace to all targets&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testUseLeaderAbilityHeroTargets(M2PublicTests.java:16440)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastHealingAbilitySurround1" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastHealingAbilitySurround1(M2PublicTests.java:13163)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastHealingAbilitySurround2" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastHealingAbilitySurround2(M2PublicTests.java:13282)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastHealingAbilitySurround4" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastHealingAbilitySurround4(M2PublicTests.java:13398)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastHealingAbilitySurround5" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastHealingAbilitySurround5(M2PublicTests.java:13509)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastHealingAbilitySurround6" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastHealingAbilitySurround6(M2PublicTests.java:13565)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastAbilityDirectionNotEnoughResources" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testCastDmgAbilitySingleTargetRemovingDeadTarget" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: After casting a damaging ability on a single target, if the target is dead it should be removed from the board&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testCastDmgAbilitySingleTargetRemovingDeadTarget(M2PublicTests.java:15657)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testUseLeaderAbilityboolean1" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: You should set the secondLeaderAbility to true after using the leader ability&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testUseLeaderAbilityboolean1(M2PublicTests.java:16391)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastCCAbilityDirectionalDownBuff" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class java.lang.IndexOutOfBoundsException occurred&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.createGame(M2PublicTests.java:27126)&#13;
	at tests.M2PublicTests.testCastCCAbilityDirectionalDownBuff(M2PublicTests.java:9751)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastDamagingAbilityChampionManaUpdatedCorrectly" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: Trying to cast an ability but class exceptions.NotEnoughResourcesException occurred&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastDamagingAbilityChampionManaUpdatedCorrectly(M2PublicTests.java:7739)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastCCAbilityDirectionalUpadteAP2" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class java.lang.IndexOutOfBoundsException occurred&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.createGame(M2PublicTests.java:27126)&#13;
	at tests.M2PublicTests.testCastCCAbilityDirectionalUpadteAP2(M2PublicTests.java:8301)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testHeroUseLeaderAbility" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testHeroAttackAntiHeroUp" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: The HP of the antihero attacked by a hero is not updated correctly. Expected 28 but was 100.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testHeroAttackAntiHeroUp(M2PublicTests.java:20058)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastCCAbilityDIRECTIONALOutOfRangeRight" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="applyLogicPowerUpDamageAmount" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testCastAbilityDIRECTIONALCurrentChampInSilence" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: Trying to cast ability with direction while champion has silence effect applied, an exception should be thrown&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastAbilityDIRECTIONALCurrentChampInSilence(M2PublicTests.java:8839)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testEndTurnRemovesExpiredEffects" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: endTurn should remove any expired effects from the current champion's appliedEffects arraylist.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testEndTurnRemovesExpiredEffects(M2PublicTests.java:24695)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastCCAbilitySingleTargetWithinRangeDeBuff1" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class exceptions.AbilityUseException occurred while trying to cast ability on single target&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastCCAbilitySingleTargetWithinRangeDeBuff1(M2PublicTests.java:11482)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testHeroAttackHeroDown" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The HP of the hero attacked by a hero is not updated correctly. Expected 66 but was 100.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testHeroAttackHeroDown(M2PublicTests.java:19578)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testConstructorInvalidTargetlExceptionConstructor2Initialization" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The constructor of the InvalidTargetException class should initialize the instance variable "message" correctly. expected:&lt;Error&gt; but was:&lt;null&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at tests.M2PublicTests.testConstructorInvalidTargetlExceptionConstructor2Initialization(M2PublicTests.java:16650)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastCCAbilitySINGLETARGETUpadteMana1" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: class exceptions.AbilityUseException occurred while trying to cast a single target cc ability&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastCCAbilitySINGLETARGETUpadteMana1(M2PublicTests.java:8472)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="removeLogicStunConditionRoot" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The method "remove" in class Stun should set the correct value of variable "condition". expected:&lt;ROOTED&gt; but was:&lt;ACTIVE&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at tests.M2PublicTests.removeLogicStunConditionRoot(M2PublicTests.java:3106)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testVillainAttackAntiHeroLeft" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: The HP of the antihero attacked by a villain is not updated correctly. Expected 93 but was 100.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testVillainAttackAntiHeroLeft(M2PublicTests.java:21407)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCheckGameOverNoWinner" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testCastDmgAbilityTeamTargetTargetRemovingDeadTarget" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: After casting a damaging ability on team target, if the target is dead it should be removed from the board&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testCastDmgAbilityTeamTargetTargetRemovingDeadTarget(M2PublicTests.java:15711)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastHealingAbilitySingleTargetWithinRangeOutOfRange" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class java.lang.IndexOutOfBoundsException occurred&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.createGame(M2PublicTests.java:27126)&#13;
	at tests.M2PublicTests.testCastHealingAbilitySingleTargetWithinRangeOutOfRange(M2PublicTests.java:11192)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastAbilitySingleTargetCurrentChampInSilence" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="testCastDamagingAbilityDirectionalLeftObstcale" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Casting left damaging ability is not applied correctly, should affect covers' HP expected:&lt;93&gt; but was:&lt;112&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at tests.M2PublicTests.testCastDamagingAbilityDirectionalLeftObstcale(M2PublicTests.java:10774)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="applyLogicShockSpeed" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The method "apply" in class Shock should set the correct value of variable "speed".&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.applyLogicShockSpeed(M2PublicTests.java:2217)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testMoveExists" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testChampionUseLeaderAbilityIsAbstract" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: useLeaderAbility method should be abstract in the class Champion&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testChampionUseLeaderAbilityIsAbstract(M2PublicTests.java:15906)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastDamagingAbilityDirectionalUpObstcale" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Casting up damaging ability is not applied correctly, should affect covers' HP expected:&lt;929&gt; but was:&lt;960&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at tests.M2PublicTests.testCastDamagingAbilityDirectionalUpObstcale(M2PublicTests.java:10522)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testValidMoveUp" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testApplyExistsInShield" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testUseLeaderAbilityAntiHeroTargets" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: AntiHero useLeaderAbility method should add the effect Stun to all targets&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testUseLeaderAbilityAntiHeroTargets(M2PublicTests.java:16590)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testEndTurnUpdatesTurnOrder" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testApplyExistsInSilence" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testHeroUseLeaderMethod" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: The method useLeaderAbility should apply the effect Embrace". expected:&lt;500&gt; but was:&lt;300&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at tests.M2PublicTests.testHeroUseLeaderMethod(M2PublicTests.java:16088)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastHealingAbilityTeamTargetOpponentTeam1" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Casting healing ability with TEAMTARGET is not applied correctly on current champ, current HP expected:&lt;58&gt; but was:&lt;32&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at tests.M2PublicTests.testCastHealingAbilityTeamTargetOpponentTeam1(M2PublicTests.java:12133)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testClassIsAbstractAbility" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testRemoveExistsInSpeedUp" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testLeaderAbilityUsedException" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: UseLeaderAbility method should throw an exception when Second leader has already use his ability&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testLeaderAbilityUsedException(M2PublicTests.java:16313)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastDmgAbilitySingleTargetWithinRangeOutOfRange" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="applyLogicRootInactive" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The method "apply" in class "Root" should set the correct value of variable "condition". If the champion was INACTIVE then his condition should remain INACTIVE after applying "Root" effect. expected:&lt;INACTIVE&gt; but was:&lt;ROOTED&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at tests.M2PublicTests.applyLogicRootInactive(M2PublicTests.java:6488)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="applyLogicDodgeSpeed" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The method "apply" in class "Dodge" should set the correct value of variable "speed".&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.applyLogicDodgeSpeed(M2PublicTests.java:6762)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="applyLogicSpeedUpMaxActions" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="testCastHealingAbilityDirectionalRight" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Casting right healing ability on target within range should update target's HP expected:&lt;67&gt; but was:&lt;36&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at tests.M2PublicTests.testCastHealingAbilityDirectionalRight(M2PublicTests.java:10460)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testGetCurrentChampionMethodExists" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testVillainAttackVillainUp" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The HP of the villain attacked by a villain is not updated correctly. Expected 93 but was 100.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testVillainAttackVillainUp(M2PublicTests.java:21157)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="removeLogicSpeedUpSpeed" classname="tests.M2PublicTests" time="0.001"/>
    <testcase name="testVillainAttackHeroUp" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The HP of the hero attacked by a villain is not updated correctly. Expected 27 but was 100.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testVillainAttackHeroUp(M2PublicTests.java:20788)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="invalidAttackDisarmed" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testVillainUseLeaderAbilityMethod" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Villain useLeaderAbility method should set the current condition of the targets to KNOCKEDOUT&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testVillainUseLeaderAbilityMethod(M2PublicTests.java:16150)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testRemoveChampionAfterAttack" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: Champion should be removed from the board after being attacked if HP reaches 0.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at tests.M2PublicTests.testRemoveChampionAfterAttack(M2PublicTests.java:23720)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testValidMoveUpdatesActionPoints" classname="tests.M2PublicTests" time="0.0"/>
    <testcase name="testCastCCAbilitySingleTargetCoverCell" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class java.lang.IndexOutOfBoundsException occurred&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.createGame(M2PublicTests.java:27126)&#13;
	at tests.M2PublicTests.testCastCCAbilitySingleTargetCoverCell(M2PublicTests.java:11640)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastCCAbilityTeamTargetSameTeamOutOfRange2" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: Casting CC ability should apply SpeedUp effect on the valid targets but it's not found in the applied effects&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.containsEffect(M2PublicTests.java:26775)&#13;
	at tests.M2PublicTests.testCastCCAbilityTeamTargetSameTeamOutOfRange2(M2PublicTests.java:12873)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastHealingAbilitySurroundOpponentTeam2" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastHealingAbilitySurroundOpponentTeam2(M2PublicTests.java:13725)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastHealingAbilitySurroundOpponentTeam3" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastHealingAbilitySurroundOpponentTeam3(M2PublicTests.java:13779)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastCCAbilitySurroundOutOfRange1" classname="tests.M2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastCCAbilitySurroundOutOfRange1(M2PublicTests.java:14651)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastCCAbilitySurroundOutOfRange2" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastCCAbilitySurroundOutOfRange2(M2PublicTests.java:14751)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastCCAbilitySurroundOutOfRange5" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class exceptions.NotEnoughResourcesException occurred while casting an ability with area of effect SURROUND&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at tests.M2PublicTests.testCastCCAbilitySurroundOutOfRange5(M2PublicTests.java:14899)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastHealingAbilityDirectionalDownOpponentTeam" classname="tests.M2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Casting Down healing ability should not be applied on opponent team targets within range, current HP expected:&lt;53&gt; but was:&lt;64&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at tests.M2PublicTests.testCastHealingAbilityDirectionalDownOpponentTeam(M2PublicTests.java:10215)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
  </testsuite>
</testrun>
